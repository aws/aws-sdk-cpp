#parse("com/amazonaws/util/awsclientgenerator/velocity/cfamily/Attribution.vm")

#pragma once
#set($metadata = $serviceModel.metadata)
#set($rootNamespace = $serviceModel.namespace)
#set($serviceNamespace = $metadata.namespace)
#set($memberKeyWithFirstLetterCapitalized = $CppViewHelper.capitalizeFirstChar(${blobMember.key}))
#set($memberVariableName = $CppViewHelper.computeMemberVariableName($blobMember.key))
#set($memberDocumentation ="/**${nl}     * ${blobMember.value.documentation}${nl}     */")
#set($required = "${CppViewHelper.computeVariableHasBeenSetName($blobMember.key)} = true; ")
#set($cppType = "const Aws::Vector<unsigned char>&")
#set($moveType = "Aws::Vector<unsigned char>&&")
#set($classNameRef = "${typeInfo.className}&")
\#include <aws/$metadata.projectName/${metadata.classNamePrefix}_EXPORTS.h>
#foreach($header in $typeInfo.headerIncludes)
\#include $header
#end

namespace Aws
{
#if ($rootNamespace != "Aws")
} // namespace Aws
namespace ${rootNamespace}
{
#end
namespace ${serviceNamespace}
{
namespace Model
{
#if($shape.documentation)
  /**
   * $shape.documentation
   */
#end
  class $typeInfo.exportValue $typeInfo.className
  {
  public:
    ${typeInfo.className}() = default;
    ${typeInfo.className}(Aws::Vector<unsigned char>&& value) { ${memberVariableName} = std::move(value); }

    $memberDocumentation
    inline ${cppType} Get${memberKeyWithFirstLetterCapitalized}() const { return ${memberVariableName}; }

    $memberDocumentation
    inline ${moveType} Get${memberKeyWithFirstLetterCapitalized}WithOwnership() { return std::move(${memberVariableName}); }

    $memberDocumentation
    inline void Set${memberKeyWithFirstLetterCapitalized}(${cppType} value) { ${required}${memberVariableName} = value; }

    $memberDocumentation
    inline void Set${memberKeyWithFirstLetterCapitalized}(${moveType} value) { ${required}${memberVariableName} = std::move(value); }

    $memberDocumentation
    inline ${classNameRef} With${memberKeyWithFirstLetterCapitalized}(${cppType} value) { Set${memberKeyWithFirstLetterCapitalized}(value); return *this;}

    $memberDocumentation
    inline ${classNameRef} With${memberKeyWithFirstLetterCapitalized}(${moveType} value) { Set${memberKeyWithFirstLetterCapitalized}(std::move(value)); return *this;}

  private:

    Aws::Vector<unsigned char> $memberVariableName;
    bool ${CppViewHelper.computeVariableHasBeenSetName($blobMember.key)} = false;
  };

} // namespace Model
} // namespace ${serviceNamespace}
} // namespace ${rootNamespace}
