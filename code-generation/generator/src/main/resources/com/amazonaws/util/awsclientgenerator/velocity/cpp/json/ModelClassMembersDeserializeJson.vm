#foreach($entry in $shape.members.entrySet())
#set($spaces = '')
#set($memberName = $entry.key)
#set($member = $entry.value)
#if($member.usedForPayload)
#set($lowerCaseVarName = $CppViewHelper.computeVariableName($memberName))
#set($memberVarName = $CppViewHelper.computeMemberVariableName($memberName))
#set($varNameHasBeenSet = $CppViewHelper.computeVariableHasBeenSetName($memberName))
#if(!$member.required)
  if(jsonValue.ValueExists("${memberName}"))
  {
#set($spaces = '  ')
#end
#if($member.shape.enum)
  ${spaces}${memberVarName} = ${member.shape.name}Mapper::Get${member.shape.name}ForName(jsonValue.GetString("${memberName}"));

#elseif($member.shape.list || $member.shape.map)
#set($currentSpaces = $spaces)
#set($currentShape = $member.shape)
#set($memberKey = ${memberName})
#set($containerVar = ${memberVarName})
#set($jsonValue = "jsonValue")
#set($recursionDepth = 1)
#parse("com/amazonaws/util/awsclientgenerator/velocity/cpp/json/ModelInternalMapOrListJsonDeserializer.vm")
#elseif($member.shape.blob)
  ${spaces}${memberVarName} = HashingUtils::Base64Decode(jsonValue.GetString("${memberName}"));
#else
  ${spaces}${memberVarName} = jsonValue.Get${CppViewHelper.computeJsonCppType($member.shape)}("${memberName}");

#end
#if(!$member.required)
#if($useRequiredField)
    $varNameHasBeenSet = true;
#end
  }

#end
#end
#end