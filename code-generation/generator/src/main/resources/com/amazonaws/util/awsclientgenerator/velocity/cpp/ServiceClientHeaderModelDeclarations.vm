#foreach($operation in $serviceModel.operations)
#if($operation.request)
        class ${operation.request.shape.name};
#foreach($entity in $operation.request.shape.members.entrySet())
#if($entity.value.shape.isEventStream())
        class ${entity.value.shape.name};
#end
#end
#end
#end

#if($serviceModel.shapes.containsKey("${metadata.classNamePrefix}Error"))
#set($clientErrorType = "${rootNamespace}::$serviceNamespace::${metadata.classNamePrefix}Error")
#else
#set($clientErrorType = "${metadata.classNamePrefix}Error")
#end
#foreach($operation in $serviceModel.operations)
#if($operation.result && !$operation.result.shape.hasEventStreamMembers())
        typedef Aws::Utils::Outcome<${operation.result.shape.name}, $clientErrorType> ${operation.name}Outcome;
#else##--#if($operation.result && !$operation.result.shape.hasEventStreamMembers())
        typedef Aws::Utils::Outcome<Aws::NoResult, $clientErrorType> ${operation.name}Outcome;
#end##--#if($operation.result && !$operation.result.shape.hasEventStreamMembers())
#end##--#foreach($operation in $serviceModel.operations)

#foreach($operation in $serviceModel.operations)
#if(!$operation.s3CrtSpecific)
        typedef std::future<${operation.name}Outcome> ${operation.name}OutcomeCallable;
#end
#end
