#parse("com/amazonaws/util/awsclientgenerator/velocity/cfamily/Attribution.vm")

#set($metadata = $serviceModel.metadata)
#set($rootNamespace = $serviceModel.namespace)
#set($serviceNamespace = $metadata.namespace)
\#include <aws/${metadata.projectName}/model/${typeInfo.className}.h>
\#include <aws/core/utils/xml/XmlSerializer.h>
\#include <aws/core/utils/memory/stl/AWSStringStream.h>
#if($shape.hasQueryStringMembers())
\#include <aws/core/http/URI.h>
#end
#foreach($header in $typeInfo.sourceIncludes)
\#include $header
#end

\#include <utility>

using namespace ${rootNamespace}::${serviceNamespace}::Model;
using namespace Aws::Utils::Xml;
using namespace Aws::Utils;
#if($shape.hasQueryStringMembers())
using namespace Aws::Http;
#end

#set($useRequiredField = true)
#parse("com/amazonaws/util/awsclientgenerator/velocity/cpp/ModelClassMembersGenerateInitializers.vm")
${typeInfo.className}::${typeInfo.className}()$initializers
{
}

Aws::String ${typeInfo.className}::SerializePayload() const
{
#if($shape.hasPayloadMembers() && $shape.payload)
#if($shape.name == $shape.payload)
#set($xmlNamespace = $shape.xmlNamespace)
#set($locationName = $shape.locationName)
#else
#set($payloadMember = $shape.members.get($shape.payload))
#set($xmlNamespace = ${payloadMember.xmlnsUri})
#set($locationName = $payloadMember.locationName)
#end
#if($locationName)
  XmlDocument payloadDoc = XmlDocument::CreateWithRootNode("${locationName}");
#else
  XmlDocument payloadDoc = XmlDocument::CreateWithRootNode("${shape.payload}");
#end

  XmlNode parentNode = payloadDoc.GetRootElement();
#if($xmlNamespace)
  parentNode.SetAttributeValue("xmlns", "${xmlNamespace}");
#end

#if($payloadMember)
  ${CppViewHelper.computeMemberVariableName($shape.payload)}.AddToNode(parentNode);
  
  return payloadDoc.ConvertToString();
#else
#set($useRequiredField = true)
#parse("com/amazonaws/util/awsclientgenerator/velocity/cpp/xml/ModelClassMembersXmlizeSource.vm")
  return payloadDoc.ConvertToString();
#end
#else
  return "";
#end
}

#if($shape.hasQueryStringMembers())
#parse("com/amazonaws/util/awsclientgenerator/velocity/cpp/AddQueryStringParametersToRequest.vm")

#end

#if($shape.hasHeaderMembers() || $metadata.targetPrefix)
Aws::Http::HeaderValueCollection ${typeInfo.className}::GetRequestSpecificHeaders() const
{
  Aws::Http::HeaderValueCollection headers;
#if($metadata.targetPrefix)
  headers.insert(Aws::Http::HeaderValuePair("X-Amz-Target", "${metadata.targetPrefix}.${CppViewHelper.computeOperationNameFromInputOutputShape($shape.name)}"));
#end
#set($useRequiredField = true)
#parse("com/amazonaws/util/awsclientgenerator/velocity/cpp/ModelClassHeaderMembersSource.vm")
  return headers;
}
#end
