#parse("com/amazonaws/util/awsclientgenerator/velocity/cfamily/Attribution.vm")

#pragma once
#set($metadata = $serviceModel.metadata)
\#include <aws/$metadata.projectName/${metadata.classNamePrefix}_EXPORTS.h>
\#include <aws/core/utils/stream/ResponseStream.h>
#foreach($header in $typeInfo.headerIncludes)
\#include $header
#end

namespace Aws
{
template<typename RESULT_TYPE>
class AmazonWebServiceResult;

namespace $metadata.namespace
{
namespace Model
{
#set($classNameRef = "${typeInfo.className}&")
#if($shape.documentation)
  /**
   * $shape.documentation
   */
#end
  class $typeInfo.exportValue $typeInfo.className
  {
  public:
    ${typeInfo.className}();
    //We have to define these because Microsoft doesn't auto generate them
    ${typeInfo.className}(${typeInfo.className}&&);
    ${classNameRef} operator=(${typeInfo.className}&&);
    //we delete these because Microsoft doesn't handle move generation correctly
    //and we therefore don't trust them to get it right here either.
    ${typeInfo.className}(const ${typeInfo.className}&) = delete;
    ${classNameRef} operator=(const ${typeInfo.className}&) = delete;


    ${typeInfo.className}(AmazonWebServiceResult<Utils::Stream::ResponseStream>&& result);
    ${classNameRef} operator=(AmazonWebServiceResult<Utils::Stream::ResponseStream>&& result);


#set($useRequiredField = false)
#parse("com/amazonaws/util/awsclientgenerator/velocity/cpp/ModelClassMembersAndInlines.vm")
  };

} // namespace Model
} // namespace $metadata.namespace
} // namespace Aws
