/**
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0.
 */

#include <aws/guardduty/model/MalwareScanDetails.h>
#include <aws/core/utils/json/JsonSerializer.h>

#include <utility>

using namespace Aws::Utils::Json;
using namespace Aws::Utils;

namespace Aws
{
namespace GuardDuty
{
namespace Model
{

MalwareScanDetails::MalwareScanDetails() : 
    m_threatsHasBeenSet(false)
{
}

MalwareScanDetails::MalwareScanDetails(JsonView jsonValue)
  : MalwareScanDetails()
{
  *this = jsonValue;
}

MalwareScanDetails& MalwareScanDetails::operator =(JsonView jsonValue)
{
  if(jsonValue.ValueExists("threats"))
  {
    Aws::Utils::Array<JsonView> threatsJsonList = jsonValue.GetArray("threats");
    for(unsigned threatsIndex = 0; threatsIndex < threatsJsonList.GetLength(); ++threatsIndex)
    {
      m_threats.push_back(threatsJsonList[threatsIndex].AsObject());
    }
    m_threatsHasBeenSet = true;
  }

  return *this;
}

JsonValue MalwareScanDetails::Jsonize() const
{
  JsonValue payload;

  if(m_threatsHasBeenSet)
  {
   Aws::Utils::Array<JsonValue> threatsJsonList(m_threats.size());
   for(unsigned threatsIndex = 0; threatsIndex < threatsJsonList.GetLength(); ++threatsIndex)
   {
     threatsJsonList[threatsIndex].AsObject(m_threats[threatsIndex].Jsonize());
   }
   payload.WithArray("threats", std::move(threatsJsonList));

  }

  return payload;
}

} // namespace Model
} // namespace GuardDuty
} // namespace Aws
