/**
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0.
 */

#pragma once
#include <aws/appsync/AppSync_EXPORTS.h>
#include <aws/core/utils/memory/stl/AWSString.h>
#include <aws/appsync/model/ErrorDetail.h>
#include <aws/core/utils/memory/stl/AWSVector.h>
#include <utility>

namespace Aws
{
template<typename RESULT_TYPE>
class AmazonWebServiceResult;

namespace Utils
{
namespace Json
{
  class JsonValue;
} // namespace Json
} // namespace Utils
namespace AppSync
{
namespace Model
{
  class EvaluateMappingTemplateResult
  {
  public:
    AWS_APPSYNC_API EvaluateMappingTemplateResult();
    AWS_APPSYNC_API EvaluateMappingTemplateResult(const Aws::AmazonWebServiceResult<Aws::Utils::Json::JsonValue>& result);
    AWS_APPSYNC_API EvaluateMappingTemplateResult& operator=(const Aws::AmazonWebServiceResult<Aws::Utils::Json::JsonValue>& result);


    /**
     * <p>The mapping template; this can be a request or response template.</p>
     */
    inline const Aws::String& GetEvaluationResult() const{ return m_evaluationResult; }

    /**
     * <p>The mapping template; this can be a request or response template.</p>
     */
    inline void SetEvaluationResult(const Aws::String& value) { m_evaluationResult = value; }

    /**
     * <p>The mapping template; this can be a request or response template.</p>
     */
    inline void SetEvaluationResult(Aws::String&& value) { m_evaluationResult = std::move(value); }

    /**
     * <p>The mapping template; this can be a request or response template.</p>
     */
    inline void SetEvaluationResult(const char* value) { m_evaluationResult.assign(value); }

    /**
     * <p>The mapping template; this can be a request or response template.</p>
     */
    inline EvaluateMappingTemplateResult& WithEvaluationResult(const Aws::String& value) { SetEvaluationResult(value); return *this;}

    /**
     * <p>The mapping template; this can be a request or response template.</p>
     */
    inline EvaluateMappingTemplateResult& WithEvaluationResult(Aws::String&& value) { SetEvaluationResult(std::move(value)); return *this;}

    /**
     * <p>The mapping template; this can be a request or response template.</p>
     */
    inline EvaluateMappingTemplateResult& WithEvaluationResult(const char* value) { SetEvaluationResult(value); return *this;}


    /**
     * <p>The <code>ErrorDetail</code> object.</p>
     */
    inline const ErrorDetail& GetError() const{ return m_error; }

    /**
     * <p>The <code>ErrorDetail</code> object.</p>
     */
    inline void SetError(const ErrorDetail& value) { m_error = value; }

    /**
     * <p>The <code>ErrorDetail</code> object.</p>
     */
    inline void SetError(ErrorDetail&& value) { m_error = std::move(value); }

    /**
     * <p>The <code>ErrorDetail</code> object.</p>
     */
    inline EvaluateMappingTemplateResult& WithError(const ErrorDetail& value) { SetError(value); return *this;}

    /**
     * <p>The <code>ErrorDetail</code> object.</p>
     */
    inline EvaluateMappingTemplateResult& WithError(ErrorDetail&& value) { SetError(std::move(value)); return *this;}


    /**
     * <p>A list of logs that were generated by calls to <code>util.log.info</code> and
     * <code>util.log.error</code> in the evaluated code.</p>
     */
    inline const Aws::Vector<Aws::String>& GetLogs() const{ return m_logs; }

    /**
     * <p>A list of logs that were generated by calls to <code>util.log.info</code> and
     * <code>util.log.error</code> in the evaluated code.</p>
     */
    inline void SetLogs(const Aws::Vector<Aws::String>& value) { m_logs = value; }

    /**
     * <p>A list of logs that were generated by calls to <code>util.log.info</code> and
     * <code>util.log.error</code> in the evaluated code.</p>
     */
    inline void SetLogs(Aws::Vector<Aws::String>&& value) { m_logs = std::move(value); }

    /**
     * <p>A list of logs that were generated by calls to <code>util.log.info</code> and
     * <code>util.log.error</code> in the evaluated code.</p>
     */
    inline EvaluateMappingTemplateResult& WithLogs(const Aws::Vector<Aws::String>& value) { SetLogs(value); return *this;}

    /**
     * <p>A list of logs that were generated by calls to <code>util.log.info</code> and
     * <code>util.log.error</code> in the evaluated code.</p>
     */
    inline EvaluateMappingTemplateResult& WithLogs(Aws::Vector<Aws::String>&& value) { SetLogs(std::move(value)); return *this;}

    /**
     * <p>A list of logs that were generated by calls to <code>util.log.info</code> and
     * <code>util.log.error</code> in the evaluated code.</p>
     */
    inline EvaluateMappingTemplateResult& AddLogs(const Aws::String& value) { m_logs.push_back(value); return *this; }

    /**
     * <p>A list of logs that were generated by calls to <code>util.log.info</code> and
     * <code>util.log.error</code> in the evaluated code.</p>
     */
    inline EvaluateMappingTemplateResult& AddLogs(Aws::String&& value) { m_logs.push_back(std::move(value)); return *this; }

    /**
     * <p>A list of logs that were generated by calls to <code>util.log.info</code> and
     * <code>util.log.error</code> in the evaluated code.</p>
     */
    inline EvaluateMappingTemplateResult& AddLogs(const char* value) { m_logs.push_back(value); return *this; }


    
    inline const Aws::String& GetRequestId() const{ return m_requestId; }

    
    inline void SetRequestId(const Aws::String& value) { m_requestId = value; }

    
    inline void SetRequestId(Aws::String&& value) { m_requestId = std::move(value); }

    
    inline void SetRequestId(const char* value) { m_requestId.assign(value); }

    
    inline EvaluateMappingTemplateResult& WithRequestId(const Aws::String& value) { SetRequestId(value); return *this;}

    
    inline EvaluateMappingTemplateResult& WithRequestId(Aws::String&& value) { SetRequestId(std::move(value)); return *this;}

    
    inline EvaluateMappingTemplateResult& WithRequestId(const char* value) { SetRequestId(value); return *this;}

  private:

    Aws::String m_evaluationResult;

    ErrorDetail m_error;

    Aws::Vector<Aws::String> m_logs;

    Aws::String m_requestId;
  };

} // namespace Model
} // namespace AppSync
} // namespace Aws
