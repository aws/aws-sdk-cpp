configurations {
        Toolset {
            key : "PlatformToolset";
            choices: { v140, v120 };
        };
}

nuget {
    // The nuspec file metadata.
    nuspec {

        // Unique package identifier
        id = AWSSDKCPP-Core;

        // Version number. Follows NuGet standards. (currently SemVer 1.0)
        version : 1.0.31;

        // Display name for package.
        title: AWS SDK for C++ (Core Runtime);

        // List of package authors.  Braces may be ommited if only one author.
        authors: Amazon Web Services;

        // URL link to the license this package is released under.
        licenseUrl: "http://aws.amazon.com/apache2.0/";

        // URL to the project website (if any).
        projectUrl: "http://github.com/aws/aws-sdk-cpp"; 

        // URL to an image to be used for package icons.
        iconUrl: "http://media.amazonwebservices.com/aws_singlebox_01.png"; 

        // If the license this package is being released
        // under has use restrictions, set this to "true".
        requireLicenseAcceptance:false; 

        summary: "v120 and v140 binary packages along with header files. No custom memory management. Standard Compiler flags used. For more info, see https://github.com/aws/aws-sdk-cpp/blob/master/README.md"; 

        // Extended description of the package contents.                                           
        description: "The AWS SDK for C++ provides a modern C++ (version C++ 11 or later) interface for Amazon Web Services (AWS). It is meant to be performant and fully functioning with low- and high-level SDKs, while minimizing dependencies and providing platform portability (Windows, OSX, Linux, and mobile)."; 

        // Copyright notice.
        copyright: Copyright 2016;

        tags: { AWS, Amazon, cloud, aws-sdk-cpp, native };
    };   

    files {
        // All .h and .hpp  files in <src_root>\include, but not in subdirectories.
        // Included for all conditions.
        nestedInclude: {
            #destination = ${d_include}\aws\core;
             "..\include\aws\core\**\*.h"
        }; 

        // Include these specific files in the libpath and "copy to output" path only
        // under these pivot conditions.
        [x64,release,v140,dynamic] {  // x64, dll (dynamic linking)
            lib+= { ..\bin\windows\intel64\vs2015\release\aws-cpp-sdk-core.lib };
            bin+= { ..\bin\windows\intel64\vs2015\release\aws-cpp-sdk-core.dll };

            symbols+= { ..\bin\windows\intel64\vs2015\release\aws-cpp-sdk-core.pdb };
        }

        [x64,release,v120,dynamic] {  // x64, dll (dynamic linking)
            lib+= { ..\bin\windows\intel64\vs2013\release\aws-cpp-sdk-core.lib };
            bin+= { ..\bin\windows\intel64\vs2013\release\aws-cpp-sdk-core.dll };

            symbols+= { ..\bin\windows\intel64\vs2013\release\aws-cpp-sdk-core.pdb };
        }

        [x64,debug,v140,dynamic] {  // x64, dll (dynamic linking)
            lib+= { ..\bin\windows\intel64\vs2015\debug\aws-cpp-sdk-core.lib };
            bin+= { ..\bin\windows\intel64\vs2015\debug\aws-cpp-sdk-core.dll };

            symbols+= { ..\bin\windows\intel64\vs2015\debug\aws-cpp-sdk-core.pdb };
        }

        [x64,debug,v120,dynamic] {  // x64, dll (dynamic linking)
            lib+= { ..\bin\windows\intel64\vs2013\debug\aws-cpp-sdk-core.lib };
            bin+= { ..\bin\windows\intel64\vs2013\debug\aws-cpp-sdk-core.dll };

            symbols+= { ..\bin\windows\intel64\vs2013\debug\aws-cpp-sdk-core.pdb };
        }

        [x64,release,v140,static] {  // x64, static linking
            lib+= { ..\lib\windows\intel64\vs2015\release\aws-cpp-sdk-core.lib };
        }

        [x64,release,v120,static] {  // x64, static linking
            lib+= { ..\lib\windows\intel64\vs2013\release\aws-cpp-sdk-core.lib };
        }

        [x64,debug,v140,static] {  // x64, static linking
            lib+= { ..\lib\windows\intel64\vs2015\debug\aws-cpp-sdk-core.lib };
        }

        [x64,debug,v120,static] {  // x64, static linking
            lib+= { ..\lib\windows\intel64\vs2013\debug\aws-cpp-sdk-core.lib };
        }

        [x86,release,v140,dynamic] {  // x86, dll (dynamic linking)
            lib+= { ..\bin\windows\ia32\vs2015\release\aws-cpp-sdk-core.lib };
            bin+= { ..\bin\windows\ia32\vs2015\release\aws-cpp-sdk-core.dll };

            symbols+= { ..\bin\windows\ia32\vs2015\release\aws-cpp-sdk-core.pdb };
        }

        [x86,release,v120,dynamic] {  // x86, dll (dynamic linking)
            lib+= { ..\bin\windows\ia32\vs2013\release\aws-cpp-sdk-core.lib };
            bin+= { ..\bin\windows\ia32\vs2013\release\aws-cpp-sdk-core.dll };

            symbols+= { ..\bin\windows\ia32\vs2013\release\aws-cpp-sdk-core.pdb };
        }

        [x86,debug,v140,dynamic] {  // x86, dll (dynamic linking)
            lib+= { ..\bin\windows\ia32\vs2015\debug\aws-cpp-sdk-core.lib };
            bin+= { ..\bin\windows\ia32\vs2015\debug\aws-cpp-sdk-core.dll };

            symbols+= { ..\bin\windows\ia32\vs2015\debug\aws-cpp-sdk-core.pdb };
        }

        [x86,debug,v120,dynamic] {  // x86, dll (dynamic linking)
            lib+= { ..\bin\windows\ia32\vs2013\debug\aws-cpp-sdk-core.lib };
            bin+= { ..\bin\windows\ia32\vs2013\debug\aws-cpp-sdk-core.dll };

            symbols+= { ..\bin\windows\ia32\vs2013\debug\aws-cpp-sdk-core.pdb };
        }

        [x86,release,v140,static] {  // x86, static linking
            lib+= { ..\lib\windows\ia32\vs2015\release\aws-cpp-sdk-core.lib };
        }

        [x86,release,v120,static] {  // x86, static linking
            lib+= { ..\lib\windows\ia32\vs2013\release\aws-cpp-sdk-core.lib };
        }

        [x86,debug,v140,static] {  // x86, static linking
            lib+= { ..\lib\windows\ia32\vs2015\debug\aws-cpp-sdk-core.lib };
        }

        [x86,debug,v120,static] {  // x86, static linking
            lib+= { ..\lib\windows\ia32\vs2013\debug\aws-cpp-sdk-core.lib };
        }
    };       
    
    targets {
        [dynamic]
            Defines += USE_IMPORT_EXPORT;
            
        Libraries += winhttp.lib;
        Libraries += wininet.lib;
        Libraries += bcrypt.lib;
        Libraries += userenv.lib;
        Libraries += Rpcrt4.lib;
        Libraries += Version.lib;
    }
}    
     
