/**
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0.
 */

#pragma once
#include <aws/organizations/Organizations_EXPORTS.h>
#include <aws/organizations/OrganizationsRequest.h>
#include <aws/organizations/model/HandshakeFilter.h>
#include <aws/core/utils/memory/stl/AWSString.h>
#include <utility>

namespace Aws
{
namespace Organizations
{
namespace Model
{

  /**
   */
  class AWS_ORGANIZATIONS_API ListHandshakesForAccountRequest : public OrganizationsRequest
  {
  public:
    ListHandshakesForAccountRequest();

    // Service request name is the Operation name which will send this request out,
    // each operation should has unique request name, so that we can get operation's name from this request.
    // Note: this is not true for response, multiple operations may have the same response name,
    // so we can not get operation's name from response.
    inline virtual const char* GetServiceRequestName() const override { return "ListHandshakesForAccount"; }

    Aws::String SerializePayload() const override;

    Aws::Http::HeaderValueCollection GetRequestSpecificHeaders() const override;


    /**
     * <p>Filters the handshakes that you want included in the response. The default is
     * all types. Use the <code>ActionType</code> element to limit the output to only a
     * specified type, such as <code>INVITE</code>, <code>ENABLE_ALL_FEATURES</code>,
     * or <code>APPROVE_ALL_FEATURES</code>. Alternatively, for the
     * <code>ENABLE_ALL_FEATURES</code> handshake that generates a separate child
     * handshake for each member account, you can specify
     * <code>ParentHandshakeId</code> to see only the handshakes that were generated by
     * that parent request.</p>
     */
    inline const HandshakeFilter& GetFilter() const{ return m_filter; }

    /**
     * <p>Filters the handshakes that you want included in the response. The default is
     * all types. Use the <code>ActionType</code> element to limit the output to only a
     * specified type, such as <code>INVITE</code>, <code>ENABLE_ALL_FEATURES</code>,
     * or <code>APPROVE_ALL_FEATURES</code>. Alternatively, for the
     * <code>ENABLE_ALL_FEATURES</code> handshake that generates a separate child
     * handshake for each member account, you can specify
     * <code>ParentHandshakeId</code> to see only the handshakes that were generated by
     * that parent request.</p>
     */
    inline bool FilterHasBeenSet() const { return m_filterHasBeenSet; }

    /**
     * <p>Filters the handshakes that you want included in the response. The default is
     * all types. Use the <code>ActionType</code> element to limit the output to only a
     * specified type, such as <code>INVITE</code>, <code>ENABLE_ALL_FEATURES</code>,
     * or <code>APPROVE_ALL_FEATURES</code>. Alternatively, for the
     * <code>ENABLE_ALL_FEATURES</code> handshake that generates a separate child
     * handshake for each member account, you can specify
     * <code>ParentHandshakeId</code> to see only the handshakes that were generated by
     * that parent request.</p>
     */
    inline void SetFilter(const HandshakeFilter& value) { m_filterHasBeenSet = true; m_filter = value; }

    /**
     * <p>Filters the handshakes that you want included in the response. The default is
     * all types. Use the <code>ActionType</code> element to limit the output to only a
     * specified type, such as <code>INVITE</code>, <code>ENABLE_ALL_FEATURES</code>,
     * or <code>APPROVE_ALL_FEATURES</code>. Alternatively, for the
     * <code>ENABLE_ALL_FEATURES</code> handshake that generates a separate child
     * handshake for each member account, you can specify
     * <code>ParentHandshakeId</code> to see only the handshakes that were generated by
     * that parent request.</p>
     */
    inline void SetFilter(HandshakeFilter&& value) { m_filterHasBeenSet = true; m_filter = std::move(value); }

    /**
     * <p>Filters the handshakes that you want included in the response. The default is
     * all types. Use the <code>ActionType</code> element to limit the output to only a
     * specified type, such as <code>INVITE</code>, <code>ENABLE_ALL_FEATURES</code>,
     * or <code>APPROVE_ALL_FEATURES</code>. Alternatively, for the
     * <code>ENABLE_ALL_FEATURES</code> handshake that generates a separate child
     * handshake for each member account, you can specify
     * <code>ParentHandshakeId</code> to see only the handshakes that were generated by
     * that parent request.</p>
     */
    inline ListHandshakesForAccountRequest& WithFilter(const HandshakeFilter& value) { SetFilter(value); return *this;}

    /**
     * <p>Filters the handshakes that you want included in the response. The default is
     * all types. Use the <code>ActionType</code> element to limit the output to only a
     * specified type, such as <code>INVITE</code>, <code>ENABLE_ALL_FEATURES</code>,
     * or <code>APPROVE_ALL_FEATURES</code>. Alternatively, for the
     * <code>ENABLE_ALL_FEATURES</code> handshake that generates a separate child
     * handshake for each member account, you can specify
     * <code>ParentHandshakeId</code> to see only the handshakes that were generated by
     * that parent request.</p>
     */
    inline ListHandshakesForAccountRequest& WithFilter(HandshakeFilter&& value) { SetFilter(std::move(value)); return *this;}


    /**
     * <p>The parameter for receiving additional results if you receive a
     * <code>NextToken</code> response in a previous request. A <code>NextToken</code>
     * response indicates that more output is available. Set this parameter to the
     * value of the previous call's <code>NextToken</code> response to indicate where
     * the output should continue from.</p>
     */
    inline const Aws::String& GetNextToken() const{ return m_nextToken; }

    /**
     * <p>The parameter for receiving additional results if you receive a
     * <code>NextToken</code> response in a previous request. A <code>NextToken</code>
     * response indicates that more output is available. Set this parameter to the
     * value of the previous call's <code>NextToken</code> response to indicate where
     * the output should continue from.</p>
     */
    inline bool NextTokenHasBeenSet() const { return m_nextTokenHasBeenSet; }

    /**
     * <p>The parameter for receiving additional results if you receive a
     * <code>NextToken</code> response in a previous request. A <code>NextToken</code>
     * response indicates that more output is available. Set this parameter to the
     * value of the previous call's <code>NextToken</code> response to indicate where
     * the output should continue from.</p>
     */
    inline void SetNextToken(const Aws::String& value) { m_nextTokenHasBeenSet = true; m_nextToken = value; }

    /**
     * <p>The parameter for receiving additional results if you receive a
     * <code>NextToken</code> response in a previous request. A <code>NextToken</code>
     * response indicates that more output is available. Set this parameter to the
     * value of the previous call's <code>NextToken</code> response to indicate where
     * the output should continue from.</p>
     */
    inline void SetNextToken(Aws::String&& value) { m_nextTokenHasBeenSet = true; m_nextToken = std::move(value); }

    /**
     * <p>The parameter for receiving additional results if you receive a
     * <code>NextToken</code> response in a previous request. A <code>NextToken</code>
     * response indicates that more output is available. Set this parameter to the
     * value of the previous call's <code>NextToken</code> response to indicate where
     * the output should continue from.</p>
     */
    inline void SetNextToken(const char* value) { m_nextTokenHasBeenSet = true; m_nextToken.assign(value); }

    /**
     * <p>The parameter for receiving additional results if you receive a
     * <code>NextToken</code> response in a previous request. A <code>NextToken</code>
     * response indicates that more output is available. Set this parameter to the
     * value of the previous call's <code>NextToken</code> response to indicate where
     * the output should continue from.</p>
     */
    inline ListHandshakesForAccountRequest& WithNextToken(const Aws::String& value) { SetNextToken(value); return *this;}

    /**
     * <p>The parameter for receiving additional results if you receive a
     * <code>NextToken</code> response in a previous request. A <code>NextToken</code>
     * response indicates that more output is available. Set this parameter to the
     * value of the previous call's <code>NextToken</code> response to indicate where
     * the output should continue from.</p>
     */
    inline ListHandshakesForAccountRequest& WithNextToken(Aws::String&& value) { SetNextToken(std::move(value)); return *this;}

    /**
     * <p>The parameter for receiving additional results if you receive a
     * <code>NextToken</code> response in a previous request. A <code>NextToken</code>
     * response indicates that more output is available. Set this parameter to the
     * value of the previous call's <code>NextToken</code> response to indicate where
     * the output should continue from.</p>
     */
    inline ListHandshakesForAccountRequest& WithNextToken(const char* value) { SetNextToken(value); return *this;}


    /**
     * <p>The total number of results that you want included on each page of the
     * response. If you do not include this parameter, it defaults to a value that is
     * specific to the operation. If additional items exist beyond the maximum you
     * specify, the <code>NextToken</code> response element is present and has a value
     * (is not null). Include that value as the <code>NextToken</code> request
     * parameter in the next call to the operation to get the next part of the results.
     * Note that Organizations might return fewer results than the maximum even when
     * there are more results available. You should check <code>NextToken</code> after
     * every operation to ensure that you receive all of the results.</p>
     */
    inline int GetMaxResults() const{ return m_maxResults; }

    /**
     * <p>The total number of results that you want included on each page of the
     * response. If you do not include this parameter, it defaults to a value that is
     * specific to the operation. If additional items exist beyond the maximum you
     * specify, the <code>NextToken</code> response element is present and has a value
     * (is not null). Include that value as the <code>NextToken</code> request
     * parameter in the next call to the operation to get the next part of the results.
     * Note that Organizations might return fewer results than the maximum even when
     * there are more results available. You should check <code>NextToken</code> after
     * every operation to ensure that you receive all of the results.</p>
     */
    inline bool MaxResultsHasBeenSet() const { return m_maxResultsHasBeenSet; }

    /**
     * <p>The total number of results that you want included on each page of the
     * response. If you do not include this parameter, it defaults to a value that is
     * specific to the operation. If additional items exist beyond the maximum you
     * specify, the <code>NextToken</code> response element is present and has a value
     * (is not null). Include that value as the <code>NextToken</code> request
     * parameter in the next call to the operation to get the next part of the results.
     * Note that Organizations might return fewer results than the maximum even when
     * there are more results available. You should check <code>NextToken</code> after
     * every operation to ensure that you receive all of the results.</p>
     */
    inline void SetMaxResults(int value) { m_maxResultsHasBeenSet = true; m_maxResults = value; }

    /**
     * <p>The total number of results that you want included on each page of the
     * response. If you do not include this parameter, it defaults to a value that is
     * specific to the operation. If additional items exist beyond the maximum you
     * specify, the <code>NextToken</code> response element is present and has a value
     * (is not null). Include that value as the <code>NextToken</code> request
     * parameter in the next call to the operation to get the next part of the results.
     * Note that Organizations might return fewer results than the maximum even when
     * there are more results available. You should check <code>NextToken</code> after
     * every operation to ensure that you receive all of the results.</p>
     */
    inline ListHandshakesForAccountRequest& WithMaxResults(int value) { SetMaxResults(value); return *this;}

  private:

    HandshakeFilter m_filter;
    bool m_filterHasBeenSet;

    Aws::String m_nextToken;
    bool m_nextTokenHasBeenSet;

    int m_maxResults;
    bool m_maxResultsHasBeenSet;
  };

} // namespace Model
} // namespace Organizations
} // namespace Aws
