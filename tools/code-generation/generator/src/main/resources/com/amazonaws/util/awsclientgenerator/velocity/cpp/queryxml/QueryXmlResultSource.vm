#parse("com/amazonaws/util/awsclientgenerator/velocity/cfamily/Attribution.vm")

#set($metadata = $serviceModel.metadata)
#set($rootNamespace = $serviceModel.namespace)
#set($serviceNamespace = $metadata.namespace)
\#include <aws/${metadata.projectName}/model/${typeInfo.className}.h>
\#include <aws/core/utils/xml/XmlSerializer.h>
\#include <aws/core/AmazonWebServiceResult.h>
\#include <aws/core/utils/StringUtils.h>
\#include <aws/core/utils/logging/LogMacros.h>
#foreach($header in $typeInfo.sourceIncludes)
\#include $header
#end

\#include <utility>

using namespace ${rootNamespace}::${serviceNamespace}::Model;
using namespace Aws::Utils::Xml;
using namespace Aws::Utils::Logging;
using namespace Aws::Utils;
using namespace Aws;

#set($useRequiredField = false)
#parse("com/amazonaws/util/awsclientgenerator/velocity/cpp/ModelClassMembersGenerateInitializers.vm")
${typeInfo.className}::${typeInfo.className}()$initializers
{
}

${typeInfo.className}::${typeInfo.className}(const Aws::AmazonWebServiceResult<XmlDocument>& result)
#if($initializers)
  : ${typeInfo.className}()
#end
{
  *this = result;
}

${typeInfo.className}& ${typeInfo.className}::operator =(const Aws::AmazonWebServiceResult<XmlDocument>& result)
{
  const XmlDocument& xmlDocument = result.GetPayload();
  XmlNode rootNode = xmlDocument.GetRootElement();
  XmlNode resultNode = rootNode;
  if (!rootNode.IsNull() && (rootNode.GetName() != "${typeInfo.shape.name}"))
  {
    resultNode = rootNode.FirstChild("${typeInfo.shape.name}");
  }

  if(!resultNode.IsNull())
  {
#set($useRequiredField = false)
#parse("com/amazonaws/util/awsclientgenerator/velocity/cpp/xml/ModelClassMembersDeserializeXml.vm")
  }

  if (!rootNode.IsNull()) {
#if ($metadata.protocol == "ec2" )
    XmlNode requestIdNode = rootNode.FirstChild("requestId");
    if (!requestIdNode.IsNull())
    {
      m_responseMetadata.SetRequestId(StringUtils::Trim(requestIdNode.GetText().c_str()));
    }
#else
    XmlNode responseMetadataNode = rootNode.FirstChild("ResponseMetadata");
    m_responseMetadata = responseMetadataNode;
#end
    AWS_LOGSTREAM_DEBUG("Aws::${metadata.namespace}::Model::${typeInfo.className}", "x-amzn-request-id: " << m_responseMetadata.GetRequestId() );
  }
#parse("com/amazonaws/util/awsclientgenerator/velocity/cpp/common/ResultClassHeadersDeserialize.vm")
#if($shape.hasStatusCodeMembers())
#foreach($memberEntry in $shape.members.entrySet())
#if($memberEntry.value.usedForHttpStatusCode)
  ${CppViewHelper.computeMemberVariableName($memberEntry.key)} = static_cast<int>(result.GetResponseCode());

#end
#end
#end
  return *this;
}
