#parse("com/amazonaws/util/awsclientgenerator/velocity/cfamily/Attribution.vm")

#pragma once
#set($metadata = $serviceModel.metadata)
#set($rootNamespace = $serviceModel.namespace)
#set($serviceNamespace = $metadata.namespace)
#set($exportMacro = $typeInfo.exportValue)
\#include <aws/$metadata.projectName/${metadata.classNamePrefix}_EXPORTS.h>
\#include <aws/crt/cbor/Cbor.h>
#foreach($header in $typeInfo.headerIncludes)
\#include $header
#end
namespace Aws
{
template<typename RESULT_TYPE>
    class AmazonWebServiceResult;

    namespace Utils
    {
    namespace Cbor
    {
    class CborValue;
    } // namespace Cbor
    } // namespace Utils
    #if($rootNamespace != "Aws")
        }
        namespace ${rootNamespace}
        {
    #end
    namespace ${serviceNamespace}
    {
    namespace Model
    {
    #set($CborRef = "${typeInfo.CborType}")
    #set($classNameRef = "${typeInfo.className}&")
    #if($shape.documentation)
        /**
        * ${shape.documentation}
        */
    #end
    class $typeInfo.className
    {
    public:
    ${exportMacro} ${typeInfo.className}() = default;
    ${exportMacro} ${typeInfo.className}(const Aws::AmazonWebServiceResult<${CborRef}>& result);
    ${exportMacro} ${classNameRef} operator=(const Aws::AmazonWebServiceResult<${CborRef}>& result);

    #set($useRequiredField = false)
    #parse("com/amazonaws/util/awsclientgenerator/velocity/cpp/ModelClassMembersAndInlines.vm")
    };

    } // namespace Model
    } // namespace ${serviceNamespace}
    } // namespace ${rootNamespace}
