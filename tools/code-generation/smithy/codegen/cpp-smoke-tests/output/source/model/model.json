{
    "smithy": "2.0",
    "metadata": {
        "suppressions": [
            {
                "id": "HttpMethodSemantics",
                "namespace": "*"
            },
            {
                "id": "HttpResponseCodeSemantics",
                "namespace": "*"
            },
            {
                "id": "PaginatedTrait",
                "namespace": "*"
            },
            {
                "id": "HttpHeaderTrait",
                "namespace": "*"
            },
            {
                "id": "HttpUriConflict",
                "namespace": "*"
            },
            {
                "id": "Service",
                "namespace": "*"
            }
        ]
    },
    "shapes": {
        "aws.api#ArnNamespace": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "A string representing a service's ARN namespace.",
                "smithy.api#pattern": "^[a-z0-9.\\-]{1,63}$",
                "smithy.api#private": {}
            }
        },
        "aws.api#CloudFormationName": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "A string representing a CloudFormation service name.",
                "smithy.api#pattern": "^[A-Z][A-Za-z0-9]+$",
                "smithy.api#private": {}
            }
        },
        "aws.api#TagOperationReference": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Points to an operation designated for a tagging APi",
                "smithy.api#idRef": {
                    "failWhenMissing": true,
                    "selector": "resource > operation"
                }
            }
        },
        "aws.api#TaggableApiConfig": {
            "type": "structure",
            "members": {
                "tagApi": {
                    "target": "aws.api#TagOperationReference",
                    "traits": {
                        "smithy.api#documentation": "The `tagApi` property is a string value that references a non-instance\nor create operation that creates or updates tags on the resource.",
                        "smithy.api#required": {}
                    }
                },
                "untagApi": {
                    "target": "aws.api#TagOperationReference",
                    "traits": {
                        "smithy.api#documentation": "The `untagApi` property is a string value that references a non-instance\noperation that removes tags on the resource.",
                        "smithy.api#required": {}
                    }
                },
                "listTagsApi": {
                    "target": "aws.api#TagOperationReference",
                    "traits": {
                        "smithy.api#documentation": "The `listTagsApi` property is a string value that references a non-\ninstance operation which gets the current tags on the resource.",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Structure representing the configuration of resource specific tagging APIs"
            }
        },
        "aws.api#arn": {
            "type": "structure",
            "members": {
                "template": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Defines the ARN template. The provided string contains URI-template\nstyle label placeholders that contain the name of one of the identifiers\ndefined in the `identifiers` property of the resource. These labels can\nbe substituted at runtime with the actual identifiers of the resource.\nEvery identifier name of the resource MUST have corresponding label of\nthe same name. Note that percent-encoding **is not** performed on these\nplaceholder values; they are to be replaced literally. For relative ARN\ntemplates that have not set `absolute` to `true`, the template string\ncontains only the resource part of the ARN (for example,\n`foo/{MyResourceId}`). Relative ARNs MUST NOT start with \"/\".",
                        "smithy.api#required": {}
                    }
                },
                "absolute": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "Set to true to indicate that the ARN template contains a fully-formed\nARN that does not need to be merged with the service. This type of ARN\nMUST be used when the identifier of a resource is an ARN or is based on\nthe ARN identifier of a parent resource."
                    }
                },
                "noRegion": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "Set to true to specify that the ARN does not contain a region. If not\nset, or if set to false, the resolved ARN will contain a placeholder\nfor the region. This can only be set to true if `absolute` is not set\nor is false."
                    }
                },
                "noAccount": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "Set to true to specify that the ARN does not contain an account ID. If\nnot set, or if set to false, the resolved ARN will contain a placeholder\nfor the customer account ID. This can only be set to true if absolute\nis not set or is false."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Specifies an ARN template for the resource.",
                "smithy.api#externalDocumentation": {
                    "Reference": "https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"
                },
                "smithy.api#trait": {
                    "selector": "resource"
                }
            }
        },
        "aws.api#arnReference": {
            "type": "structure",
            "members": {
                "type": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The AWS CloudFormation resource type contained in the ARN."
                    }
                },
                "resource": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "An absolute shape ID that references the Smithy resource type contained\nin the ARN (e.g., `com.foo#SomeResource`). The targeted resource is not\nrequired to be found in the model, allowing for external shapes to be\nreferenced without needing to take on an additional dependency. If the\nshape is found in the model, it MUST target a resource shape, and the\nresource MUST be found within the closure of the referenced service\nshape."
                    }
                },
                "service": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The Smithy service absolute shape ID that is referenced by the ARN. The\ntargeted service is not required to be found in the model, allowing for\nexternal shapes to be referenced without needing to take on an\nadditional dependency."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Marks a string as containing an ARN.",
                "smithy.api#trait": {
                    "selector": "string"
                }
            }
        },
        "aws.api#clientDiscoveredEndpoint": {
            "type": "structure",
            "members": {
                "required": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "This field denotes whether or not this operation requires the use of a\nspecific endpoint. If this field is false, the standard regional\nendpoint for a service can handle this request. The client will start\nsending requests to the standard regional endpoint while working to\ndiscover a more specific endpoint.",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Indicates that the target operation should use the client's endpoint\ndiscovery logic.",
                "smithy.api#trait": {
                    "selector": "operation"
                }
            }
        },
        "aws.api#clientEndpointDiscovery": {
            "type": "structure",
            "members": {
                "operation": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Indicates the operation that clients should use to discover endpoints\nfor the service.",
                        "smithy.api#idRef": {
                            "failWhenMissing": true,
                            "selector": "operation"
                        },
                        "smithy.api#required": {}
                    }
                },
                "error": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Indicates the error that tells clients that the endpoint they are using\nis no longer valid. This error MUST be bound to any operation bound to\nthe service which is marked with the aws.api#clientDiscoveredEndpoint\ntrait.",
                        "smithy.api#idRef": {
                            "failWhenMissing": true,
                            "selector": "structure[trait|error]"
                        },
                        "smithy.api#recommended": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Configures endpoint discovery for the service.",
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.api#clientEndpointDiscoveryId": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Indicates members of the operation input which should be use to discover\nendpoints.",
                "smithy.api#trait": {
                    "selector": "operation[trait|aws.api#clientDiscoveredEndpoint] -[input]->\nstructure > :test(member[trait|required] > string)"
                }
            }
        },
        "aws.api#controlPlane": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Defines a service, resource, or operation as operating on the control plane.",
                "smithy.api#trait": {
                    "selector": ":test(service, resource, operation)",
                    "conflicts": [
                        "aws.api#dataPlane"
                    ]
                }
            }
        },
        "aws.api#data": {
            "type": "enum",
            "members": {
                "CUSTOMER_CONTENT": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "Customer content means any software (including machine images), data,\ntext, audio, video or images that customers or any customer end user\ntransfers to AWS for processing, storage or hosting by AWS services in\nconnection with the customer’s accounts and any computational results\nthat customers or any customer end user derive from the foregoing\nthrough their use of AWS services.",
                        "smithy.api#enumValue": "content"
                    }
                },
                "CUSTOMER_ACCOUNT_INFORMATION": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "Account information means information about customers that customers\nprovide to AWS in connection with the creation or administration of\ncustomers’ accounts.",
                        "smithy.api#enumValue": "account"
                    }
                },
                "SERVICE_ATTRIBUTES": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "Service Attributes means service usage data related to a customer’s\naccount, such as resource identifiers, metadata tags, security and\naccess roles, rules, usage policies, permissions, usage statistics,\nlogging data, and analytics.",
                        "smithy.api#enumValue": "usage"
                    }
                },
                "TAG_DATA": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "Designates metadata tags applied to AWS resources.",
                        "smithy.api#enumValue": "tagging"
                    }
                },
                "PERMISSIONS_DATA": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "Designates security and access roles, rules, usage policies, and\npermissions.",
                        "smithy.api#enumValue": "permissions"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Designates the target as containing data of a known classification level.",
                "smithy.api#trait": {
                    "selector": ":test(simpleType, list, structure, union, member)"
                }
            }
        },
        "aws.api#dataPlane": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Defines a service, resource, or operation as operating on the data plane.",
                "smithy.api#trait": {
                    "selector": ":test(service, resource, operation)",
                    "conflicts": [
                        "aws.api#controlPlane"
                    ]
                }
            }
        },
        "aws.api#service": {
            "type": "structure",
            "members": {
                "sdkId": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The `sdkId` property is a required string value that specifies the AWS\nSDK service ID (e.g., \"API Gateway\"). This value is used for generating\nclient names in SDKs and for linking between services.",
                        "smithy.api#required": {}
                    }
                },
                "arnNamespace": {
                    "target": "aws.api#ArnNamespace",
                    "traits": {
                        "smithy.api#documentation": "The `arnNamespace` property is a string value that defines the ARN service\nnamespace of the service (e.g., \"apigateway\"). This value is used in\nARNs assigned to resources in the service. If not set, this value\ndefaults to the lowercase name of the service shape."
                    }
                },
                "cloudFormationName": {
                    "target": "aws.api#CloudFormationName",
                    "traits": {
                        "smithy.api#documentation": "The `cloudFormationName` property is a string value that specifies the\nAWS CloudFormation service name (e.g., `ApiGateway`). When not set,\nthis value defaults to the name of the service shape. This value is\npart of the CloudFormation resource type name that is automatically\nassigned to resources in the service (e.g., `AWS::<NAME>::resourceName`)."
                    }
                },
                "cloudTrailEventSource": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The `cloudTrailEventSource` property is a string value that defines the\nAWS customer-facing eventSource property contained in CloudTrail event\nrecords emitted by the service. If not specified, this value defaults\nto the `arnNamespace` plus `.amazonaws.com`."
                    }
                },
                "docId": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The `docId` property is a string value that defines the identifier\nused to implemention linking between service and SDK documentation for\nAWS services. If not specified, this value defaults to the `sdkId` in\nlower case plus the service `version` property, separated by dashes."
                    }
                },
                "endpointPrefix": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The `endpointPrefix` property is a string value that identifies which\nendpoint in a given region should be used to connect to the service.\nFor example, most services in the AWS standard partition have endpoints\nwhich follow the format: `{endpointPrefix}.{region}.amazonaws.com`. A\nservice with the endpoint prefix example in the region us-west-2 might\nhave the endpoint example.us-west-2.amazonaws.com.\n\nThis value is not unique across services and is subject to change.\nTherefore, it MUST NOT be used for client naming or for any other\npurpose that requires a static, unique identifier. sdkId should be used\nfor those purposes. Additionally, this value can be used to attempt to\nresolve endpoints."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "An AWS service is defined using the `aws.api#service` trait. This trait\nprovides information about the service like the name used to generate AWS\nSDK client classes and the namespace used in ARNs.",
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.api#tagEnabled": {
            "type": "structure",
            "members": {
                "disableDefaultOperations": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "The `disableDefaultOperations` property is a boolean value that specifies\nif the service does not have the standard tag operations supporting all\nresources on the service. Default value is `false`"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Annotates a service as having tagging on 1 or more resources and associated\nAPIs to perform CRUD operations on those tags",
                "smithy.api#trait": {
                    "selector": "service"
                },
                "smithy.api#unstable": {}
            }
        },
        "aws.api#taggable": {
            "type": "structure",
            "members": {
                "property": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The `property` property is a string value that identifies which\nresource property represents tags for the resource."
                    }
                },
                "apiConfig": {
                    "target": "aws.api#TaggableApiConfig",
                    "traits": {
                        "smithy.api#documentation": "Specifies configuration for resource specific tagging APIs if the\nresource has them."
                    }
                },
                "disableSystemTags": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "Flag indicating if the resource is not able to carry AWS system level.\nUsed by service principals. Default value is `false`"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Indicates a resource supports CRUD operations for tags. Either through\nresource lifecycle or instance operations or tagging operations on the\nservice.",
                "smithy.api#trait": {
                    "selector": "resource"
                },
                "smithy.api#unstable": {}
            }
        },
        "aws.auth#StringList": {
            "type": "list",
            "member": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.auth#cognitoUserPools": {
            "type": "structure",
            "members": {
                "providerArns": {
                    "target": "aws.auth#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of the Amazon Cognito user pool ARNs. Each element is of this\nformat: `arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}`.",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#authDefinition": {},
                "smithy.api#documentation": "Configures an Amazon Cognito User Pools auth scheme.",
                "smithy.api#internal": {},
                "smithy.api#tags": [
                    "internal"
                ],
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.auth#sigv4": {
            "type": "structure",
            "members": {
                "name": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The signature version 4 service signing name to use in the credential\nscope when signing requests. This value SHOULD match the `arnNamespace`\nproperty of the `aws.api#service` trait if present and the `name`\nproperty of the `aws.api#sigv4a` trait if present.",
                        "smithy.api#externalDocumentation": {
                            "Reference": "https://docs.aws.amazon.com/general/latest/gr/sigv4-create-string-to-sign.html"
                        },
                        "smithy.api#length": {
                            "min": 1
                        },
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#authDefinition": {
                    "traits": [
                        "aws.auth#unsignedPayload"
                    ]
                },
                "smithy.api#documentation": "[Signature Version 4](https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html)\nis the process to add authentication information to AWS requests sent by HTTP. For\nsecurity, most requests to AWS must be signed with an access key, which consists\nof an access key ID and secret access key. These two keys are commonly referred to\nas your security credentials.",
                "smithy.api#externalDocumentation": {
                    "Reference": "https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html"
                },
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.auth#sigv4a": {
            "type": "structure",
            "members": {
                "name": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The signature version 4a service signing name to use in the credential\nscope when signing requests. This value SHOULD match the `arnNamespace`\nproperty of the `aws.api#service` trait if present and the `name`\nproperty of the `aws.api#sigv4` trait.",
                        "smithy.api#externalDocumentation": {
                            "Reference": "https://docs.aws.amazon.com/general/latest/gr/sigv4-create-string-to-sign.html"
                        },
                        "smithy.api#length": {
                            "min": 1
                        },
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#authDefinition": {
                    "traits": [
                        "aws.auth#unsignedPayload"
                    ]
                },
                "smithy.api#documentation": "Signature Version 4 Asymmetric (SigV4A), an extension of Signature Version 4 (SigV4), is the\nprocess to add authentication information to AWS requests sent by HTTP. SigV4A is nearly\nidentical to SigV4, but also uses public-private keys and asymmetric cryptographic signatures\nfor every request. Most notably, SigV4A supports signatures for multi-region API requests.",
                "smithy.api#externalDocumentation": {
                    "Reference": "https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html",
                    "Examples": "https://github.com/aws-samples/sigv4a-signing-examples"
                },
                "smithy.api#trait": {
                    "selector": "service[trait|aws.auth#sigv4]"
                }
            }
        },
        "aws.auth#unsignedPayload": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Indicates that the request payload of a signed request is not to be used\nas part of the signature.",
                "smithy.api#trait": {
                    "selector": "operation"
                }
            }
        },
        "aws.customizations#s3UnwrappedXmlOutput": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Indicates the response body from S3 is not wrapped in the\naws-restxml-protocol operation-level XML node. Intended to only be used by\nAWS S3.",
                "smithy.api#trait": {
                    "selector": "operation"
                }
            }
        },
        "aws.endpoints#PartitionEndpointPattern": {
            "type": "enum",
            "members": {
                "SERVICE_DNSSUFFIX": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "service_dnsSuffix"
                    }
                },
                "SERVICE_REGION_DNSSUFFIX": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "service_region_dnsSuffix"
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.endpoints#PartitionEndpointSpecialCase": {
            "type": "structure",
            "members": {
                "endpoint": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The special-cased endpoint pattern."
                    }
                },
                "region": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The region to override the defaultGlobalRegion used in this partition."
                    }
                },
                "dualStack": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "When true, the special case will apply to dualstack endpoint variants."
                    }
                },
                "fips": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "When true, the special case will apply to fips endpoint variants."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Defines the endpoint pattern to apply for a partitional endpoint.",
                "smithy.api#private": {}
            }
        },
        "aws.endpoints#PartitionEndpointSpecialCaseList": {
            "type": "list",
            "member": {
                "target": "aws.endpoints#PartitionEndpointSpecialCase"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.endpoints#PartitionEndpointSpecialCaseMap": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "aws.endpoints#PartitionEndpointSpecialCaseList"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.endpoints#PartitionSpecialCase": {
            "type": "structure",
            "members": {
                "endpoint": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The special-cased endpoint pattern.",
                        "smithy.api#required": {}
                    }
                },
                "dualStack": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "When true, the special case will apply to dualstack endpoint variants."
                    }
                },
                "fips": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "When true, the special case will apply to fips endpoint variants."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Defines the endpoint pattern to apply for all regional endpoints in the given partition.",
                "smithy.api#private": {}
            }
        },
        "aws.endpoints#PartitionSpecialCaseList": {
            "type": "list",
            "member": {
                "target": "aws.endpoints#PartitionSpecialCase"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.endpoints#PartitionSpecialCaseMap": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "aws.endpoints#PartitionSpecialCaseList"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.endpoints#RegionSpecialCase": {
            "type": "structure",
            "members": {
                "endpoint": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The special-cased endpoint pattern.",
                        "smithy.api#required": {}
                    }
                },
                "dualStack": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "When true, the special case will apply to dualstack endpoint variants."
                    }
                },
                "fips": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "When true, the special case will apply to fips endpoint variants."
                    }
                },
                "signingRegion": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Overrides the signingRegion used for this region."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Defines the endpoint pattern to apply for a region.",
                "smithy.api#private": {}
            }
        },
        "aws.endpoints#RegionSpecialCaseList": {
            "type": "list",
            "member": {
                "target": "aws.endpoints#RegionSpecialCase"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.endpoints#RegionSpecialCaseMap": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "aws.endpoints#RegionSpecialCaseList"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.endpoints#dualStackOnlyEndpoints": {
            "type": "structure",
            "members": {},
            "traits": {
                "aws.endpoints#endpointsModifier": {},
                "smithy.api#documentation": "Marks that a services has only dualStack endpoints.",
                "smithy.api#trait": {
                    "selector": "service",
                    "breakingChanges": [
                        {
                            "change": "any"
                        }
                    ]
                },
                "smithy.api#unstable": {}
            }
        },
        "aws.endpoints#endpointsModifier": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Marks a trait as an endpoints modifier defining trait.\n\nThe targeted trait must only be applied to service shapes,\nmust be a structure, and must have the `trait` trait.",
                "smithy.api#trait": {
                    "selector": "structure[trait|trait]",
                    "breakingChanges": [
                        {
                            "change": "presence"
                        }
                    ]
                }
            }
        },
        "aws.endpoints#rulesBasedEndpoints": {
            "type": "structure",
            "members": {},
            "traits": {
                "aws.endpoints#endpointsModifier": {},
                "smithy.api#documentation": "Marks that a services has hand written endpoint rules.",
                "smithy.api#trait": {
                    "selector": "service",
                    "breakingChanges": [
                        {
                            "change": "any"
                        }
                    ]
                },
                "smithy.api#unstable": {}
            }
        },
        "aws.endpoints#standardPartitionalEndpoints": {
            "type": "structure",
            "members": {
                "endpointPatternType": {
                    "target": "aws.endpoints#PartitionEndpointPattern",
                    "traits": {
                        "smithy.api#documentation": "The pattern type to use for the partition endpoint.",
                        "smithy.api#required": {}
                    }
                },
                "partitionEndpointSpecialCases": {
                    "target": "aws.endpoints#PartitionEndpointSpecialCaseMap",
                    "traits": {
                        "smithy.api#documentation": "A map of partition to a list of partition endpoint special cases -\npartitions that do not follow the services standard patterns or are\nlocated in a region other than the partition's defaultGlobalRegion."
                    }
                }
            },
            "traits": {
                "aws.endpoints#endpointsModifier": {},
                "smithy.api#documentation": "Marks that a services is non-regionalized and has\na single endpoint in each partition.",
                "smithy.api#trait": {
                    "selector": "service",
                    "conflicts": [
                        "aws.endpoints#standardRegionalEndpoints"
                    ],
                    "breakingChanges": [
                        {
                            "change": "any"
                        }
                    ]
                },
                "smithy.api#unstable": {}
            }
        },
        "aws.endpoints#standardRegionalEndpoints": {
            "type": "structure",
            "members": {
                "partitionSpecialCases": {
                    "target": "aws.endpoints#PartitionSpecialCaseMap",
                    "traits": {
                        "smithy.api#documentation": "A map of partition to partition special cases -\nendpoints for a partition that do not follow the standard patterns."
                    }
                },
                "regionSpecialCases": {
                    "target": "aws.endpoints#RegionSpecialCaseMap",
                    "traits": {
                        "smithy.api#documentation": "A map of region to regional special cases -\nendpoints for a region that do not follow the standard patterns."
                    }
                }
            },
            "traits": {
                "aws.endpoints#endpointsModifier": {},
                "smithy.api#documentation": "Marks that a services endpoints should be resolved using\nstandard regional endpoint patterns.",
                "smithy.api#trait": {
                    "selector": "service",
                    "conflicts": [
                        "aws.endpoints#standardPartitionalEndpoints"
                    ],
                    "breakingChanges": [
                        {
                            "change": "remove"
                        }
                    ]
                },
                "smithy.api#unstable": {}
            }
        },
        "aws.protocols#ChecksumAlgorithm": {
            "type": "enum",
            "members": {
                "CRC32C": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "CRC32C",
                        "smithy.api#enumValue": "CRC32C"
                    }
                },
                "CRC32": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "CRC32",
                        "smithy.api#enumValue": "CRC32"
                    }
                },
                "SHA1": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "SHA1",
                        "smithy.api#enumValue": "SHA1"
                    }
                },
                "SHA256": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "SHA256",
                        "smithy.api#enumValue": "SHA256"
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.protocols#ChecksumAlgorithmSet": {
            "type": "list",
            "member": {
                "target": "aws.protocols#ChecksumAlgorithm"
            },
            "traits": {
                "smithy.api#length": {
                    "min": 1
                },
                "smithy.api#private": {},
                "smithy.api#uniqueItems": {}
            }
        },
        "aws.protocols#HttpConfiguration": {
            "type": "structure",
            "members": {
                "http": {
                    "target": "aws.protocols#StringList",
                    "traits": {
                        "smithy.api#documentation": "The priority ordered list of supported HTTP protocol versions."
                    }
                },
                "eventStreamHttp": {
                    "target": "aws.protocols#StringList",
                    "traits": {
                        "smithy.api#documentation": "The priority ordered list of supported HTTP protocol versions that\nare required when using event streams with the service. If not set,\nthis value defaults to the value of the `http` member. Any entry in\n`eventStreamHttp` MUST also appear in `http`."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Contains HTTP protocol configuration for HTTP-based protocols.",
                "smithy.api#mixin": {
                    "localTraits": [
                        "smithy.api#private"
                    ]
                },
                "smithy.api#private": {}
            }
        },
        "aws.protocols#StringList": {
            "type": "list",
            "member": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.protocols#awsJson1_0": {
            "type": "structure",
            "mixins": [
                {
                    "target": "aws.protocols#HttpConfiguration"
                }
            ],
            "members": {},
            "traits": {
                "smithy.api#documentation": "An RPC-based protocol that sends JSON payloads. This protocol does not use\nHTTP binding traits.",
                "smithy.api#protocolDefinition": {
                    "traits": [
                        "smithy.api#timestampFormat",
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.protocols#awsJson1_1": {
            "type": "structure",
            "mixins": [
                {
                    "target": "aws.protocols#HttpConfiguration"
                }
            ],
            "members": {},
            "traits": {
                "smithy.api#documentation": "An RPC-based protocol that sends JSON payloads. This protocol does not use\nHTTP binding traits.",
                "smithy.api#protocolDefinition": {
                    "traits": [
                        "smithy.api#timestampFormat",
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.protocols#awsQuery": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#deprecated": {},
                "smithy.api#documentation": "An RPC-based protocol that sends 'POST' requests in the body as\n`x-www-form-urlencoded` strings and responses in XML documents. This\nprotocol does not use HTTP binding traits.",
                "smithy.api#protocolDefinition": {
                    "traits": [
                        "smithy.api#timestampFormat",
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel",
                        "aws.protocols#awsQueryError",
                        "smithy.api#xmlAttribute",
                        "smithy.api#xmlFlattened",
                        "smithy.api#xmlName",
                        "smithy.api#xmlNamespace"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service [trait|xmlNamespace]"
                },
                "smithy.api#traitValidators": {
                    "UnsupportedProtocolDocument": {
                        "selector": "~> member :test(> document)",
                        "message": "Document types are not supported with awsQuery"
                    }
                }
            }
        },
        "aws.protocols#awsQueryCompatible": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Enable backward compatibility when migrating from awsQuery to awsJson protocol",
                "smithy.api#trait": {
                    "selector": "service [trait|aws.protocols#awsJson1_0]"
                }
            }
        },
        "aws.protocols#awsQueryError": {
            "type": "structure",
            "members": {
                "code": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The value used to distinguish this error shape during serialization.",
                        "smithy.api#required": {}
                    }
                },
                "httpResponseCode": {
                    "target": "smithy.api#Integer",
                    "traits": {
                        "smithy.api#documentation": "The HTTP response code used on a response containing this error shape.",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Provides the value in the 'Code' distinguishing field and HTTP response\ncode for an operation error.",
                "smithy.api#trait": {
                    "selector": "structure [trait|error]",
                    "breakingChanges": [
                        {
                            "change": "any"
                        }
                    ]
                }
            }
        },
        "aws.protocols#ec2Query": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#deprecated": {},
                "smithy.api#documentation": "An RPC-based protocol that sends 'POST' requests in the body as Amazon EC2\nformatted `x-www-form-urlencoded` strings and responses in XML documents.\nThis protocol does not use HTTP binding traits.",
                "smithy.api#protocolDefinition": {
                    "traits": [
                        "smithy.api#timestampFormat",
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel",
                        "aws.protocols#ec2QueryName",
                        "smithy.api#xmlAttribute",
                        "smithy.api#xmlFlattened",
                        "smithy.api#xmlName",
                        "smithy.api#xmlNamespace"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service [trait|xmlNamespace]"
                },
                "smithy.api#traitValidators": {
                    "UnsupportedProtocolDocument": {
                        "selector": "~> member :test(> document)",
                        "message": "Document types are not supported with ec2Query"
                    }
                }
            }
        },
        "aws.protocols#ec2QueryName": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Indicates the serialized name of a structure member when that structure is\nserialized for the input of an EC2 operation.",
                "smithy.api#pattern": "^[a-zA-Z_][a-zA-Z_0-9-]*$",
                "smithy.api#trait": {
                    "selector": "structure > member"
                }
            }
        },
        "aws.protocols#httpChecksum": {
            "type": "structure",
            "members": {
                "requestAlgorithmMember": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Defines a top-level operation input member that is used to configure\nrequest checksum behavior."
                    }
                },
                "requestChecksumRequired": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "Indicates an operation requires a checksum in its HTTP request."
                    }
                },
                "requestValidationModeMember": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Defines a top-level operation input member used to opt-in to response\nchecksum validation."
                    }
                },
                "responseAlgorithms": {
                    "target": "aws.protocols#ChecksumAlgorithmSet",
                    "traits": {
                        "smithy.api#documentation": "Defines the checksum algorithms clients should look for when performing\nHTTP response checksum validation."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Indicates that an operation supports checksum validation.",
                "smithy.api#trait": {
                    "selector": "operation"
                },
                "smithy.api#unstable": {}
            }
        },
        "aws.protocols#restJson1": {
            "type": "structure",
            "mixins": [
                {
                    "target": "aws.protocols#HttpConfiguration"
                }
            ],
            "members": {},
            "traits": {
                "smithy.api#documentation": "A RESTful protocol that sends JSON in structured payloads.",
                "smithy.api#protocolDefinition": {
                    "traits": [
                        "smithy.api#timestampFormat",
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel",
                        "smithy.api#http",
                        "smithy.api#httpError",
                        "smithy.api#httpHeader",
                        "smithy.api#httpLabel",
                        "smithy.api#httpPayload",
                        "smithy.api#httpPrefixHeaders",
                        "smithy.api#httpQuery",
                        "smithy.api#httpQueryParams",
                        "smithy.api#httpResponseCode",
                        "smithy.api#httpChecksumRequired",
                        "smithy.api#jsonName"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.protocols#restXml": {
            "type": "structure",
            "mixins": [
                {
                    "target": "aws.protocols#HttpConfiguration"
                }
            ],
            "members": {
                "noErrorWrapping": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#deprecated": {},
                        "smithy.api#documentation": "Disables the serialization wrapping of error properties in an 'Error'\nXML element."
                    }
                }
            },
            "traits": {
                "smithy.api#deprecated": {},
                "smithy.api#documentation": "A RESTful protocol that sends XML in structured payloads.",
                "smithy.api#protocolDefinition": {
                    "traits": [
                        "smithy.api#timestampFormat",
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel",
                        "smithy.api#http",
                        "smithy.api#httpError",
                        "smithy.api#httpHeader",
                        "smithy.api#httpLabel",
                        "smithy.api#httpPayload",
                        "smithy.api#httpPrefixHeaders",
                        "smithy.api#httpQuery",
                        "smithy.api#httpQueryParams",
                        "smithy.api#httpResponseCode",
                        "smithy.api#httpChecksumRequired",
                        "smithy.api#xmlAttribute",
                        "smithy.api#xmlFlattened",
                        "smithy.api#xmlName",
                        "smithy.api#xmlNamespace"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service"
                },
                "smithy.api#traitValidators": {
                    "UnsupportedProtocolDocument": {
                        "selector": "~> member :test(> document)",
                        "message": "Document types are not supported with restXml"
                    }
                }
            }
        },
        "aws.test#AwsVendorParams": {
            "type": "structure",
            "mixins": [
                {
                    "target": "aws.test#BaseAwsVendorParams"
                }
            ],
            "members": {},
            "traits": {
                "smithy.api#documentation": "Concrete vendor params to apply to AWS services by default.",
                "smithy.api#suppress": [
                    "UnreferencedShape"
                ]
            }
        },
        "aws.test#BaseAwsVendorParams": {
            "type": "structure",
            "members": {
                "region": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#default": "us-west-2",
                        "smithy.api#documentation": "The AWS region to sign the request for and to resolve the default\nendpoint with."
                    }
                },
                "sigv4aRegionSet": {
                    "target": "aws.test#NonEmptyStringList",
                    "traits": {
                        "smithy.api#documentation": "The set of regions to sign a sigv4a request with."
                    }
                },
                "uri": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A static endpoint to send the request to."
                    }
                },
                "useFips": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#default": false,
                        "smithy.api#documentation": "Whether to resolve a FIPS compliant endpoint or not."
                    }
                },
                "useDualstack": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#default": false,
                        "smithy.api#documentation": "Whether to resolve a dualstack endpoint or not."
                    }
                },
                "useAccountIdRouting": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#default": true,
                        "smithy.api#documentation": "Whether to use account ID based routing where applicable."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Base vendor params for all aws services.",
                "smithy.api#mixin": {},
                "smithy.api#suppress": [
                    "UnreferencedShape"
                ]
            }
        },
        "aws.test#NonEmptyStringList": {
            "type": "list",
            "member": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#length": {
                    "min": 1
                },
                "smithy.api#private": {},
                "smithy.api#suppress": [
                    "UnreferencedShape"
                ]
            }
        },
        "aws.test#S3VendorParams": {
            "type": "structure",
            "mixins": [
                {
                    "target": "aws.test#BaseAwsVendorParams"
                }
            ],
            "members": {
                "useAccelerate": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#default": false,
                        "smithy.api#documentation": "Whether to resolve an accelerate endpoint or not."
                    }
                },
                "useGlobalEndpoint": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#default": false,
                        "smithy.api#documentation": "Whether to use the global endpoint for us-east-1."
                    }
                },
                "forcePathStyle": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#default": false,
                        "smithy.api#documentation": "Whether to force path-style addressing."
                    }
                },
                "useArnRegion": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#default": true,
                        "smithy.api#documentation": "Whether to use the region in the bucket arn to override the set\nregion."
                    }
                },
                "useMultiRegionAccessPoints": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#default": true,
                        "smithy.api#documentation": "Whether to use S3's multi-region access points."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Vendor params for S3.",
                "smithy.api#suppress": [
                    "UnreferencedShape"
                ]
            }
        },
        "com.amazonaws.elasticinference#AcceleratorHealthStatus": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 256
                }
            }
        },
        "com.amazonaws.elasticinference#AcceleratorId": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 256
                },
                "smithy.api#pattern": "^eia-[0-9a-f]+$"
            }
        },
        "com.amazonaws.elasticinference#AcceleratorIdList": {
            "type": "list",
            "member": {
                "target": "com.amazonaws.elasticinference#AcceleratorId"
            },
            "traits": {
                "smithy.api#length": {
                    "min": 0,
                    "max": 1000
                }
            }
        },
        "com.amazonaws.elasticinference#AcceleratorType": {
            "type": "structure",
            "members": {
                "acceleratorTypeName": {
                    "target": "com.amazonaws.elasticinference#AcceleratorTypeName",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The name of the Elastic Inference Accelerator type.\n        </p>"
                    }
                },
                "memoryInfo": {
                    "target": "com.amazonaws.elasticinference#MemoryInfo",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The memory information of the Elastic Inference Accelerator type.\n        </p>"
                    }
                },
                "throughputInfo": {
                    "target": "com.amazonaws.elasticinference#ThroughputInfoList",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The throughput information of the Elastic Inference Accelerator type.\n        </p>"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>\n            The details of an Elastic Inference Accelerator type.\n        </p>"
            }
        },
        "com.amazonaws.elasticinference#AcceleratorTypeList": {
            "type": "list",
            "member": {
                "target": "com.amazonaws.elasticinference#AcceleratorType"
            },
            "traits": {
                "smithy.api#length": {
                    "min": 0,
                    "max": 100
                }
            }
        },
        "com.amazonaws.elasticinference#AcceleratorTypeName": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 256
                },
                "smithy.api#pattern": "^\\S+$"
            }
        },
        "com.amazonaws.elasticinference#AcceleratorTypeNameList": {
            "type": "list",
            "member": {
                "target": "com.amazonaws.elasticinference#AcceleratorTypeName"
            },
            "traits": {
                "smithy.api#length": {
                    "min": 0,
                    "max": 100
                }
            }
        },
        "com.amazonaws.elasticinference#AcceleratorTypeOffering": {
            "type": "structure",
            "members": {
                "acceleratorType": {
                    "target": "com.amazonaws.elasticinference#AcceleratorTypeName",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The name of the Elastic Inference Accelerator type.\n        </p>"
                    }
                },
                "locationType": {
                    "target": "com.amazonaws.elasticinference#LocationType",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The location type for the offering. It can assume the following values:\n            region: defines that the offering is at the regional level.\n            availability-zone: defines that the offering is at the availability zone level.\n            availability-zone-id: defines that the offering is at the availability zone level, defined by the availability zone id.\n        </p>"
                    }
                },
                "location": {
                    "target": "com.amazonaws.elasticinference#Location",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The location for the offering.\n            It will return either the region, availability zone or availability zone id for the offering depending on the locationType value.\n        </p>"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>\n            The offering for an Elastic Inference Accelerator type.\n        </p>"
            }
        },
        "com.amazonaws.elasticinference#AcceleratorTypeOfferingList": {
            "type": "list",
            "member": {
                "target": "com.amazonaws.elasticinference#AcceleratorTypeOffering"
            },
            "traits": {
                "smithy.api#length": {
                    "min": 0,
                    "max": 100
                }
            }
        },
        "com.amazonaws.elasticinference#AvailabilityZone": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 256
                }
            }
        },
        "com.amazonaws.elasticinference#BadRequestException": {
            "type": "structure",
            "members": {
                "message": {
                    "target": "com.amazonaws.elasticinference#String"
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>\n            Raised when a malformed input has been provided to the API.\n        </p>",
                "smithy.api#error": "client",
                "smithy.api#httpError": 400
            }
        },
        "com.amazonaws.elasticinference#DescribeAcceleratorOfferings": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.elasticinference#DescribeAcceleratorOfferingsRequest"
            },
            "output": {
                "target": "com.amazonaws.elasticinference#DescribeAcceleratorOfferingsResponse"
            },
            "errors": [
                {
                    "target": "com.amazonaws.elasticinference#BadRequestException"
                },
                {
                    "target": "com.amazonaws.elasticinference#InternalServerException"
                },
                {
                    "target": "com.amazonaws.elasticinference#ResourceNotFoundException"
                }
            ],
            "traits": {
                "smithy.api#documentation": "<note>\n            <p>Amazon Elastic Inference is no longer available.</p>\n         </note>\n         <p>\n            Describes the locations in which a given accelerator type or set of types is present in a given region.\n        </p>",
                "smithy.api#http": {
                    "method": "POST",
                    "uri": "/describe-accelerator-offerings",
                    "code": 200
                }
            }
        },
        "com.amazonaws.elasticinference#DescribeAcceleratorOfferingsRequest": {
            "type": "structure",
            "members": {
                "locationType": {
                    "target": "com.amazonaws.elasticinference#LocationType",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The location type that you want to describe accelerator type offerings for. It can assume the following values:\n            region: will return the accelerator type offering at the regional level.\n            availability-zone: will return the accelerator type offering at the availability zone level.\n            availability-zone-id: will return the accelerator type offering at the availability zone level returning the availability zone id.\n        </p>",
                        "smithy.api#required": {}
                    }
                },
                "acceleratorTypes": {
                    "target": "com.amazonaws.elasticinference#AcceleratorTypeNameList",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The list of accelerator types to describe.\n        </p>"
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.elasticinference#DescribeAcceleratorOfferingsResponse": {
            "type": "structure",
            "members": {
                "acceleratorTypeOfferings": {
                    "target": "com.amazonaws.elasticinference#AcceleratorTypeOfferingList",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The list of accelerator type offerings for a specific location.\n        </p>"
                    }
                }
            },
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.elasticinference#DescribeAcceleratorTypes": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.elasticinference#DescribeAcceleratorTypesRequest"
            },
            "output": {
                "target": "com.amazonaws.elasticinference#DescribeAcceleratorTypesResponse"
            },
            "errors": [
                {
                    "target": "com.amazonaws.elasticinference#InternalServerException"
                }
            ],
            "traits": {
                "smithy.api#documentation": "<note>\n            <p>Amazon Elastic Inference is no longer available.</p>\n         </note>\n         <p>\n            Describes the accelerator types available in a given region, as well as their characteristics, such as memory and throughput.\n        </p>",
                "smithy.api#http": {
                    "method": "GET",
                    "uri": "/describe-accelerator-types",
                    "code": 200
                }
            }
        },
        "com.amazonaws.elasticinference#DescribeAcceleratorTypesRequest": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.elasticinference#DescribeAcceleratorTypesResponse": {
            "type": "structure",
            "members": {
                "acceleratorTypes": {
                    "target": "com.amazonaws.elasticinference#AcceleratorTypeList",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The available accelerator types.\n        </p>"
                    }
                }
            },
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.elasticinference#DescribeAccelerators": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.elasticinference#DescribeAcceleratorsRequest"
            },
            "output": {
                "target": "com.amazonaws.elasticinference#DescribeAcceleratorsResponse"
            },
            "errors": [
                {
                    "target": "com.amazonaws.elasticinference#BadRequestException"
                },
                {
                    "target": "com.amazonaws.elasticinference#InternalServerException"
                },
                {
                    "target": "com.amazonaws.elasticinference#ResourceNotFoundException"
                }
            ],
            "traits": {
                "smithy.api#documentation": "<note>\n            <p>Amazon Elastic Inference is no longer available.</p>\n         </note>\n         <p>\n            Describes information over a provided set of accelerators belonging to an account.\n        </p>",
                "smithy.api#http": {
                    "method": "POST",
                    "uri": "/describe-accelerators",
                    "code": 200
                },
                "smithy.api#paginated": {
                    "inputToken": "nextToken",
                    "outputToken": "nextToken",
                    "items": "acceleratorSet",
                    "pageSize": "maxResults"
                }
            }
        },
        "com.amazonaws.elasticinference#DescribeAcceleratorsRequest": {
            "type": "structure",
            "members": {
                "acceleratorIds": {
                    "target": "com.amazonaws.elasticinference#AcceleratorIdList",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The IDs of the accelerators to describe.\n        </p>"
                    }
                },
                "filters": {
                    "target": "com.amazonaws.elasticinference#FilterList",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            One or more filters. Filter names and values are case-sensitive. Valid filter names are:\n            accelerator-types: can provide a list of accelerator type names to filter for.\n            instance-id: can provide a list of EC2 instance ids to filter for.\n        </p>"
                    }
                },
                "maxResults": {
                    "target": "com.amazonaws.elasticinference#MaxResults",
                    "traits": {
                        "smithy.api#default": 0,
                        "smithy.api#documentation": "<p>\n            The total number of items to return in the command's output. If the total number of items available is more than the value specified, a NextToken is provided in the command's output.\n            To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command.\n            Do not use the NextToken response element directly outside of the AWS CLI.\n        </p>"
                    }
                },
                "nextToken": {
                    "target": "com.amazonaws.elasticinference#NextToken",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            A token to specify where to start paginating. This is the NextToken from a previously truncated response.\n        </p>"
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.elasticinference#DescribeAcceleratorsResponse": {
            "type": "structure",
            "members": {
                "acceleratorSet": {
                    "target": "com.amazonaws.elasticinference#ElasticInferenceAcceleratorSet",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The details of the Elastic Inference Accelerators.\n        </p>"
                    }
                },
                "nextToken": {
                    "target": "com.amazonaws.elasticinference#NextToken",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            A token to specify where to start paginating. This is the NextToken from a previously truncated response.\n        </p>"
                    }
                }
            },
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.elasticinference#EC2MatterhornCfSoothsayerApiGatewayLambda": {
            "type": "service",
            "version": "2017-07-25",
            "operations": [
                {
                    "target": "com.amazonaws.elasticinference#DescribeAcceleratorOfferings"
                },
                {
                    "target": "com.amazonaws.elasticinference#DescribeAccelerators"
                },
                {
                    "target": "com.amazonaws.elasticinference#DescribeAcceleratorTypes"
                },
                {
                    "target": "com.amazonaws.elasticinference#ListTagsForResource"
                },
                {
                    "target": "com.amazonaws.elasticinference#TagResource"
                },
                {
                    "target": "com.amazonaws.elasticinference#UntagResource"
                }
            ],
            "traits": {
                "aws.api#service": {
                    "sdkId": "Elastic Inference",
                    "arnNamespace": "elastic-inference",
                    "cloudFormationName": "ElasticInference",
                    "cloudTrailEventSource": "elasticinference.amazonaws.com",
                    "endpointPrefix": "api.elastic-inference"
                },
                "aws.auth#sigv4": {
                    "name": "elastic-inference"
                },
                "aws.protocols#restJson1": {},
                "smithy.api#documentation": "<note>\n            <p>Amazon Elastic Inference is no longer available.</p>\n         </note>\n         <p>\n            Elastic Inference public APIs.\n        </p>",
                "smithy.api#title": "Amazon Elastic  Inference",
                "smithy.rules#endpointRuleSet": {
                    "version": "1.0",
                    "parameters": {
                        "Region": {
                            "builtIn": "AWS::Region",
                            "required": false,
                            "documentation": "The AWS region used to dispatch the request.",
                            "type": "String"
                        },
                        "UseDualStack": {
                            "builtIn": "AWS::UseDualStack",
                            "required": true,
                            "default": false,
                            "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                            "type": "Boolean"
                        },
                        "UseFIPS": {
                            "builtIn": "AWS::UseFIPS",
                            "required": true,
                            "default": false,
                            "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                            "type": "Boolean"
                        },
                        "Endpoint": {
                            "builtIn": "SDK::Endpoint",
                            "required": false,
                            "documentation": "Override the endpoint used to send this request",
                            "type": "String"
                        }
                    },
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Endpoint"
                                        }
                                    ]
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                                    "type": "error"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                                    "type": "error"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": {
                                            "ref": "Endpoint"
                                        },
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ]
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "aws.partition",
                                            "argv": [
                                                {
                                                    "ref": "Region"
                                                }
                                            ],
                                            "assign": "PartitionResult"
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "endpoint": {
                                                                "url": "https://api.elastic-inference-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                "properties": {},
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "endpoint": {
                                                                "url": "https://api.elastic-inference-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                                "properties": {},
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS is enabled but this partition does not support FIPS",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "endpoint": {
                                                                "url": "https://api.elastic-inference.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                "properties": {},
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "DualStack is enabled but this partition does not support DualStack",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "endpoint": {
                                                "url": "https://api.elastic-inference.{Region}.{PartitionResult#dnsSuffix}",
                                                "properties": {},
                                                "headers": {}
                                            },
                                            "type": "endpoint"
                                        }
                                    ],
                                    "type": "tree"
                                }
                            ],
                            "type": "tree"
                        },
                        {
                            "conditions": [],
                            "error": "Invalid Configuration: Missing Region",
                            "type": "error"
                        }
                    ]
                },
                "smithy.rules#endpointTests": {
                    "testCases": [
                        {
                            "documentation": "For region ap-northeast-1 with FIPS disabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://api.elastic-inference.ap-northeast-1.amazonaws.com"
                                }
                            },
                            "params": {
                                "Region": "ap-northeast-1",
                                "UseFIPS": false,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region ap-northeast-2 with FIPS disabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://api.elastic-inference.ap-northeast-2.amazonaws.com"
                                }
                            },
                            "params": {
                                "Region": "ap-northeast-2",
                                "UseFIPS": false,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region eu-west-1 with FIPS disabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://api.elastic-inference.eu-west-1.amazonaws.com"
                                }
                            },
                            "params": {
                                "Region": "eu-west-1",
                                "UseFIPS": false,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-east-1 with FIPS disabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://api.elastic-inference.us-east-1.amazonaws.com"
                                }
                            },
                            "params": {
                                "Region": "us-east-1",
                                "UseFIPS": false,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-east-2 with FIPS disabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://api.elastic-inference.us-east-2.amazonaws.com"
                                }
                            },
                            "params": {
                                "Region": "us-east-2",
                                "UseFIPS": false,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-west-2 with FIPS disabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://api.elastic-inference.us-west-2.amazonaws.com"
                                }
                            },
                            "params": {
                                "Region": "us-west-2",
                                "UseFIPS": false,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-east-1 with FIPS enabled and DualStack enabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://api.elastic-inference-fips.us-east-1.api.aws"
                                }
                            },
                            "params": {
                                "Region": "us-east-1",
                                "UseFIPS": true,
                                "UseDualStack": true
                            }
                        },
                        {
                            "documentation": "For region us-east-1 with FIPS enabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://api.elastic-inference-fips.us-east-1.amazonaws.com"
                                }
                            },
                            "params": {
                                "Region": "us-east-1",
                                "UseFIPS": true,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-east-1 with FIPS disabled and DualStack enabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://api.elastic-inference.us-east-1.api.aws"
                                }
                            },
                            "params": {
                                "Region": "us-east-1",
                                "UseFIPS": false,
                                "UseDualStack": true
                            }
                        },
                        {
                            "documentation": "For region cn-north-1 with FIPS enabled and DualStack enabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://api.elastic-inference-fips.cn-north-1.api.amazonwebservices.com.cn"
                                }
                            },
                            "params": {
                                "Region": "cn-north-1",
                                "UseFIPS": true,
                                "UseDualStack": true
                            }
                        },
                        {
                            "documentation": "For region cn-north-1 with FIPS enabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://api.elastic-inference-fips.cn-north-1.amazonaws.com.cn"
                                }
                            },
                            "params": {
                                "Region": "cn-north-1",
                                "UseFIPS": true,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region cn-north-1 with FIPS disabled and DualStack enabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://api.elastic-inference.cn-north-1.api.amazonwebservices.com.cn"
                                }
                            },
                            "params": {
                                "Region": "cn-north-1",
                                "UseFIPS": false,
                                "UseDualStack": true
                            }
                        },
                        {
                            "documentation": "For region cn-north-1 with FIPS disabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://api.elastic-inference.cn-north-1.amazonaws.com.cn"
                                }
                            },
                            "params": {
                                "Region": "cn-north-1",
                                "UseFIPS": false,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack enabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://api.elastic-inference-fips.us-gov-east-1.api.aws"
                                }
                            },
                            "params": {
                                "Region": "us-gov-east-1",
                                "UseFIPS": true,
                                "UseDualStack": true
                            }
                        },
                        {
                            "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://api.elastic-inference-fips.us-gov-east-1.amazonaws.com"
                                }
                            },
                            "params": {
                                "Region": "us-gov-east-1",
                                "UseFIPS": true,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack enabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://api.elastic-inference.us-gov-east-1.api.aws"
                                }
                            },
                            "params": {
                                "Region": "us-gov-east-1",
                                "UseFIPS": false,
                                "UseDualStack": true
                            }
                        },
                        {
                            "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://api.elastic-inference.us-gov-east-1.amazonaws.com"
                                }
                            },
                            "params": {
                                "Region": "us-gov-east-1",
                                "UseFIPS": false,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack enabled",
                            "expect": {
                                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
                            },
                            "params": {
                                "Region": "us-iso-east-1",
                                "UseFIPS": true,
                                "UseDualStack": true
                            }
                        },
                        {
                            "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://api.elastic-inference-fips.us-iso-east-1.c2s.ic.gov"
                                }
                            },
                            "params": {
                                "Region": "us-iso-east-1",
                                "UseFIPS": true,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack enabled",
                            "expect": {
                                "error": "DualStack is enabled but this partition does not support DualStack"
                            },
                            "params": {
                                "Region": "us-iso-east-1",
                                "UseFIPS": false,
                                "UseDualStack": true
                            }
                        },
                        {
                            "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://api.elastic-inference.us-iso-east-1.c2s.ic.gov"
                                }
                            },
                            "params": {
                                "Region": "us-iso-east-1",
                                "UseFIPS": false,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack enabled",
                            "expect": {
                                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
                            },
                            "params": {
                                "Region": "us-isob-east-1",
                                "UseFIPS": true,
                                "UseDualStack": true
                            }
                        },
                        {
                            "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://api.elastic-inference-fips.us-isob-east-1.sc2s.sgov.gov"
                                }
                            },
                            "params": {
                                "Region": "us-isob-east-1",
                                "UseFIPS": true,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack enabled",
                            "expect": {
                                "error": "DualStack is enabled but this partition does not support DualStack"
                            },
                            "params": {
                                "Region": "us-isob-east-1",
                                "UseFIPS": false,
                                "UseDualStack": true
                            }
                        },
                        {
                            "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://api.elastic-inference.us-isob-east-1.sc2s.sgov.gov"
                                }
                            },
                            "params": {
                                "Region": "us-isob-east-1",
                                "UseFIPS": false,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For custom endpoint with region set and fips disabled and dualstack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://example.com"
                                }
                            },
                            "params": {
                                "Region": "us-east-1",
                                "UseFIPS": false,
                                "UseDualStack": false,
                                "Endpoint": "https://example.com"
                            }
                        },
                        {
                            "documentation": "For custom endpoint with region not set and fips disabled and dualstack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://example.com"
                                }
                            },
                            "params": {
                                "UseFIPS": false,
                                "UseDualStack": false,
                                "Endpoint": "https://example.com"
                            }
                        },
                        {
                            "documentation": "For custom endpoint with fips enabled and dualstack disabled",
                            "expect": {
                                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
                            },
                            "params": {
                                "Region": "us-east-1",
                                "UseFIPS": true,
                                "UseDualStack": false,
                                "Endpoint": "https://example.com"
                            }
                        },
                        {
                            "documentation": "For custom endpoint with fips disabled and dualstack enabled",
                            "expect": {
                                "error": "Invalid Configuration: Dualstack and custom endpoint are not supported"
                            },
                            "params": {
                                "Region": "us-east-1",
                                "UseFIPS": false,
                                "UseDualStack": true,
                                "Endpoint": "https://example.com"
                            }
                        },
                        {
                            "documentation": "Missing region",
                            "expect": {
                                "error": "Invalid Configuration: Missing Region"
                            }
                        }
                    ],
                    "version": "1.0"
                }
            }
        },
        "com.amazonaws.elasticinference#ElasticInferenceAccelerator": {
            "type": "structure",
            "members": {
                "acceleratorHealth": {
                    "target": "com.amazonaws.elasticinference#ElasticInferenceAcceleratorHealth",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The health of the Elastic Inference Accelerator.\n        </p>"
                    }
                },
                "acceleratorType": {
                    "target": "com.amazonaws.elasticinference#AcceleratorTypeName",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The type of the Elastic Inference Accelerator.\n        </p>"
                    }
                },
                "acceleratorId": {
                    "target": "com.amazonaws.elasticinference#AcceleratorId",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The ID of the Elastic Inference Accelerator.\n        </p>"
                    }
                },
                "availabilityZone": {
                    "target": "com.amazonaws.elasticinference#AvailabilityZone",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The availability zone where the Elastic Inference Accelerator is present.\n        </p>"
                    }
                },
                "attachedResource": {
                    "target": "com.amazonaws.elasticinference#ResourceARN2",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The ARN of the resource that the Elastic Inference Accelerator is attached to.\n        </p>"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>\n            The details of an Elastic Inference Accelerator.\n        </p>"
            }
        },
        "com.amazonaws.elasticinference#ElasticInferenceAcceleratorHealth": {
            "type": "structure",
            "members": {
                "status": {
                    "target": "com.amazonaws.elasticinference#AcceleratorHealthStatus",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The health status of the Elastic Inference Accelerator.\n        </p>"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>\n            The health details of an Elastic Inference Accelerator.\n        </p>"
            }
        },
        "com.amazonaws.elasticinference#ElasticInferenceAcceleratorSet": {
            "type": "list",
            "member": {
                "target": "com.amazonaws.elasticinference#ElasticInferenceAccelerator",
                "traits": {
                    "smithy.api#xmlName": "item"
                }
            }
        },
        "com.amazonaws.elasticinference#Filter": {
            "type": "structure",
            "members": {
                "name": {
                    "target": "com.amazonaws.elasticinference#FilterName",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The filter name for the Elastic Inference Accelerator list. It can assume the following values:\n            accelerator-type: the type of Elastic Inference Accelerator to filter for.\n            instance-id: an EC2 instance id to filter for.\n        </p>"
                    }
                },
                "values": {
                    "target": "com.amazonaws.elasticinference#ValueStringList",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The values for the filter of the Elastic Inference Accelerator list.\n        </p>"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>\n            A filter expression for the Elastic Inference Accelerator list.\n        </p>"
            }
        },
        "com.amazonaws.elasticinference#FilterList": {
            "type": "list",
            "member": {
                "target": "com.amazonaws.elasticinference#Filter"
            },
            "traits": {
                "smithy.api#length": {
                    "min": 0,
                    "max": 100
                }
            }
        },
        "com.amazonaws.elasticinference#FilterName": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 128
                },
                "smithy.api#pattern": "^\\S+$"
            }
        },
        "com.amazonaws.elasticinference#Integer": {
            "type": "integer",
            "traits": {
                "smithy.api#default": 0
            }
        },
        "com.amazonaws.elasticinference#InternalServerException": {
            "type": "structure",
            "members": {
                "message": {
                    "target": "com.amazonaws.elasticinference#String"
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>\n            Raised when an unexpected error occurred during request processing.\n        </p>",
                "smithy.api#error": "server",
                "smithy.api#httpError": 500
            }
        },
        "com.amazonaws.elasticinference#Key": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 256
                },
                "smithy.api#pattern": "^\\S+$"
            }
        },
        "com.amazonaws.elasticinference#KeyValuePair": {
            "type": "structure",
            "members": {
                "key": {
                    "target": "com.amazonaws.elasticinference#Key",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The throughput value of the Elastic Inference Accelerator type. It can assume the following values:\n            TFLOPS16bit: the throughput expressed in 16bit TeraFLOPS.\n            TFLOPS32bit: the throughput expressed in 32bit TeraFLOPS.\n        </p>"
                    }
                },
                "value": {
                    "target": "com.amazonaws.elasticinference#Value",
                    "traits": {
                        "smithy.api#default": 0,
                        "smithy.api#documentation": "<p>\n            The throughput value of the Elastic Inference Accelerator type.\n        </p>"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>\n            A throughput entry for an Elastic Inference Accelerator type.\n        </p>"
            }
        },
        "com.amazonaws.elasticinference#ListTagsForResource": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.elasticinference#ListTagsForResourceRequest"
            },
            "output": {
                "target": "com.amazonaws.elasticinference#ListTagsForResourceResult"
            },
            "errors": [
                {
                    "target": "com.amazonaws.elasticinference#BadRequestException"
                },
                {
                    "target": "com.amazonaws.elasticinference#InternalServerException"
                },
                {
                    "target": "com.amazonaws.elasticinference#ResourceNotFoundException"
                }
            ],
            "traits": {
                "smithy.api#documentation": "<note>\n            <p>Amazon Elastic Inference is no longer available.</p>\n         </note>\n         <p>\n            Returns all tags of an Elastic Inference Accelerator.\n        </p>",
                "smithy.api#http": {
                    "method": "GET",
                    "uri": "/tags/{resourceArn}",
                    "code": 200
                }
            }
        },
        "com.amazonaws.elasticinference#ListTagsForResourceRequest": {
            "type": "structure",
            "members": {
                "resourceArn": {
                    "target": "com.amazonaws.elasticinference#ResourceARN",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The ARN of the Elastic Inference Accelerator to list the tags for.\n        </p>",
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.elasticinference#ListTagsForResourceResult": {
            "type": "structure",
            "members": {
                "tags": {
                    "target": "com.amazonaws.elasticinference#TagMap",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The tags of the Elastic Inference Accelerator.\n        </p>"
                    }
                }
            },
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.elasticinference#Location": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 256
                }
            }
        },
        "com.amazonaws.elasticinference#LocationType": {
            "type": "enum",
            "members": {
                "region": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "region"
                    }
                },
                "availability_zone": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "availability-zone"
                    }
                },
                "availability_zone_id": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "availability-zone-id"
                    }
                }
            },
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 256
                }
            }
        },
        "com.amazonaws.elasticinference#MaxResults": {
            "type": "integer",
            "traits": {
                "smithy.api#default": 0,
                "smithy.api#range": {
                    "min": 0,
                    "max": 100
                }
            }
        },
        "com.amazonaws.elasticinference#MemoryInfo": {
            "type": "structure",
            "members": {
                "sizeInMiB": {
                    "target": "com.amazonaws.elasticinference#Integer",
                    "traits": {
                        "smithy.api#default": 0,
                        "smithy.api#documentation": "<p>\n            The size in mebibytes of the Elastic Inference Accelerator type.\n        </p>"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>\n            The memory information of an Elastic Inference Accelerator type.\n        </p>"
            }
        },
        "com.amazonaws.elasticinference#NextToken": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 2048
                },
                "smithy.api#pattern": "^[A-Za-z0-9+/]+={0,2}$"
            }
        },
        "com.amazonaws.elasticinference#ResourceARN": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 1011
                },
                "smithy.api#pattern": "^arn:aws[^\\s:]*:elastic-inference:[^\\s:]+:\\d{12}:elastic-inference-accelerator/eia-[0-9a-f]+$"
            }
        },
        "com.amazonaws.elasticinference#ResourceARN2": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 1283
                }
            }
        },
        "com.amazonaws.elasticinference#ResourceNotFoundException": {
            "type": "structure",
            "members": {
                "message": {
                    "target": "com.amazonaws.elasticinference#String"
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>\n            Raised when the requested resource cannot be found.\n        </p>",
                "smithy.api#error": "client",
                "smithy.api#httpError": 404
            }
        },
        "com.amazonaws.elasticinference#String": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 0,
                    "max": 500000
                },
                "smithy.api#pattern": "^.*$"
            }
        },
        "com.amazonaws.elasticinference#TagKey": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 128
                },
                "smithy.api#pattern": "^\\S$"
            }
        },
        "com.amazonaws.elasticinference#TagKeyList": {
            "type": "list",
            "member": {
                "target": "com.amazonaws.elasticinference#TagKey"
            },
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 50
                }
            }
        },
        "com.amazonaws.elasticinference#TagMap": {
            "type": "map",
            "key": {
                "target": "com.amazonaws.elasticinference#TagKey"
            },
            "value": {
                "target": "com.amazonaws.elasticinference#TagValue"
            },
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 50
                }
            }
        },
        "com.amazonaws.elasticinference#TagResource": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.elasticinference#TagResourceRequest"
            },
            "output": {
                "target": "com.amazonaws.elasticinference#TagResourceResult"
            },
            "errors": [
                {
                    "target": "com.amazonaws.elasticinference#BadRequestException"
                },
                {
                    "target": "com.amazonaws.elasticinference#InternalServerException"
                },
                {
                    "target": "com.amazonaws.elasticinference#ResourceNotFoundException"
                }
            ],
            "traits": {
                "smithy.api#documentation": "<note>\n            <p>Amazon Elastic Inference is no longer available.</p>\n         </note>\n         <p>\n            Adds the specified tags to an Elastic Inference Accelerator.\n        </p>",
                "smithy.api#http": {
                    "method": "POST",
                    "uri": "/tags/{resourceArn}",
                    "code": 200
                }
            }
        },
        "com.amazonaws.elasticinference#TagResourceRequest": {
            "type": "structure",
            "members": {
                "resourceArn": {
                    "target": "com.amazonaws.elasticinference#ResourceARN",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The ARN of the Elastic Inference Accelerator to tag.\n        </p>",
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                },
                "tags": {
                    "target": "com.amazonaws.elasticinference#TagMap",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The tags to add to the Elastic Inference Accelerator.\n        </p>",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.elasticinference#TagResourceResult": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.elasticinference#TagValue": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 0,
                    "max": 256
                },
                "smithy.api#pattern": ".*"
            }
        },
        "com.amazonaws.elasticinference#ThroughputInfoList": {
            "type": "list",
            "member": {
                "target": "com.amazonaws.elasticinference#KeyValuePair",
                "traits": {
                    "smithy.api#xmlName": "item"
                }
            },
            "traits": {
                "smithy.api#length": {
                    "min": 0,
                    "max": 100
                }
            }
        },
        "com.amazonaws.elasticinference#UntagResource": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.elasticinference#UntagResourceRequest"
            },
            "output": {
                "target": "com.amazonaws.elasticinference#UntagResourceResult"
            },
            "errors": [
                {
                    "target": "com.amazonaws.elasticinference#BadRequestException"
                },
                {
                    "target": "com.amazonaws.elasticinference#InternalServerException"
                },
                {
                    "target": "com.amazonaws.elasticinference#ResourceNotFoundException"
                }
            ],
            "traits": {
                "smithy.api#documentation": "<note>\n            <p>Amazon Elastic Inference is no longer available.</p>\n         </note>\n         <p>\n            Removes the specified tags from an Elastic Inference Accelerator.\n        </p>",
                "smithy.api#http": {
                    "method": "DELETE",
                    "uri": "/tags/{resourceArn}",
                    "code": 200
                }
            }
        },
        "com.amazonaws.elasticinference#UntagResourceRequest": {
            "type": "structure",
            "members": {
                "resourceArn": {
                    "target": "com.amazonaws.elasticinference#ResourceARN",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The ARN of the Elastic Inference Accelerator to untag.\n        </p>",
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                },
                "tagKeys": {
                    "target": "com.amazonaws.elasticinference#TagKeyList",
                    "traits": {
                        "smithy.api#documentation": "<p>\n            The list of tags to remove from the Elastic Inference Accelerator.\n        </p>",
                        "smithy.api#httpQuery": "tagKeys",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.elasticinference#UntagResourceResult": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.elasticinference#Value": {
            "type": "integer",
            "traits": {
                "smithy.api#default": 0
            }
        },
        "com.amazonaws.elasticinference#ValueStringList": {
            "type": "list",
            "member": {
                "target": "com.amazonaws.elasticinference#String"
            },
            "traits": {
                "smithy.api#length": {
                    "min": 0,
                    "max": 100
                }
            }
        },
        "smithy.rules#ClientContextParamDefinition": {
            "type": "structure",
            "members": {
                "type": {
                    "target": "smithy.rules#ShapeType",
                    "traits": {
                        "smithy.api#documentation": "The Smithy shape type that should be used to generate a client configurable for the rule-set parameter.",
                        "smithy.api#required": {}
                    }
                },
                "documentation": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Documentation string to be generated with the client parameter."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "A client context parameter definition.",
                "smithy.api#private": {},
                "smithy.api#unstable": {}
            }
        },
        "smithy.rules#EndpointExpectation": {
            "type": "structure",
            "members": {
                "url": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The expected endpoint URL to be resolved for this test case."
                    }
                },
                "headers": {
                    "target": "smithy.rules#EndpointHeaders",
                    "traits": {
                        "smithy.api#documentation": "The transport headers to be set for this test case."
                    }
                },
                "properties": {
                    "target": "smithy.rules#Properties",
                    "traits": {
                        "smithy.api#documentation": "The properties for the endpoint for this test case."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "A description of an expected endpoint to be resolved for an endpoint rule-set test case.",
                "smithy.api#private": {},
                "smithy.api#unstable": {}
            }
        },
        "smithy.rules#EndpointHeaderValue": {
            "type": "list",
            "member": {
                "target": "smithy.api#String",
                "traits": {
                    "smithy.api#documentation": "A transport header value."
                }
            },
            "traits": {
                "smithy.api#documentation": "A list of transport header values.",
                "smithy.api#private": {},
                "smithy.api#unstable": {}
            }
        },
        "smithy.rules#EndpointHeaders": {
            "type": "map",
            "key": {
                "target": "smithy.api#String",
                "traits": {
                    "smithy.api#documentation": "The transport header name."
                }
            },
            "value": {
                "target": "smithy.rules#EndpointHeaderValue",
                "traits": {
                    "smithy.api#documentation": "The transport header values."
                }
            },
            "traits": {
                "smithy.api#documentation": "A map of header names to list of values.",
                "smithy.api#private": {},
                "smithy.api#unstable": {}
            }
        },
        "smithy.rules#EndpointTest": {
            "type": "structure",
            "members": {
                "documentation": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Documentation describing the test case."
                    }
                },
                "params": {
                    "target": "smithy.api#Document",
                    "traits": {
                        "smithy.api#documentation": "Defines rule-set parameters and values to use for testing rules-engine."
                    }
                },
                "operationInputs": {
                    "target": "smithy.rules#OperationInputs",
                    "traits": {
                        "smithy.api#documentation": "Defines a set of service operation configurations used for testing the rules-engine."
                    }
                },
                "expect": {
                    "target": "smithy.rules#EndpointTestExpectation",
                    "traits": {
                        "smithy.api#documentation": "The expected outcome of the test case.",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Describes an endpoint test case for validation of an endpoint rule-set.",
                "smithy.api#private": {},
                "smithy.api#unstable": {}
            }
        },
        "smithy.rules#EndpointTestExpectation": {
            "type": "union",
            "members": {
                "error": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A test case expectation resulting in an error."
                    }
                },
                "endpoint": {
                    "target": "smithy.rules#EndpointExpectation",
                    "traits": {
                        "smithy.api#documentation": "A test case expectation resulting in an endpoint."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "An endpoint rule-set test expectation describing an expected endpoint or error.",
                "smithy.api#private": {},
                "smithy.api#unstable": {}
            }
        },
        "smithy.rules#EndpointTestList": {
            "type": "list",
            "member": {
                "target": "smithy.rules#EndpointTest"
            },
            "traits": {
                "smithy.api#documentation": "A list of endpoint rule-set tests.",
                "smithy.api#private": {},
                "smithy.api#unstable": {}
            }
        },
        "smithy.rules#OperationContextParamDefinition": {
            "type": "structure",
            "members": {
                "path": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "a JMESPath expression to select element(s) from the operation input to bind to.",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "An operation context parameter definition.",
                "smithy.api#private": {},
                "smithy.api#unstable": {}
            }
        },
        "smithy.rules#OperationInput": {
            "type": "structure",
            "members": {
                "operationName": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The name of the service operation targeted by the test.",
                        "smithy.api#required": {}
                    }
                },
                "operationParams": {
                    "target": "smithy.api#Document",
                    "traits": {
                        "smithy.api#documentation": "Defines the input parameters used to generate the operation request.\nThese parameters MUST be compatible with the input of the operation."
                    }
                },
                "builtInParams": {
                    "target": "smithy.api#Document",
                    "traits": {
                        "smithy.api#documentation": "Defines the set of rule-set built-ins and their corresponding values to be set."
                    }
                },
                "clientParams": {
                    "target": "smithy.api#Document",
                    "traits": {
                        "smithy.api#documentation": "Defines the set of client configuration parameters to be set."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "A description of a service operation and input used to verify an endpoint rule-set test case.",
                "smithy.api#private": {},
                "smithy.api#unstable": {}
            }
        },
        "smithy.rules#OperationInputs": {
            "type": "list",
            "member": {
                "target": "smithy.rules#OperationInput",
                "traits": {
                    "smithy.api#documentation": "The service operation configuration to be used for testing the rules-engine."
                }
            },
            "traits": {
                "smithy.api#documentation": "A list of operation input descriptions for an endpoint rule-set test case.",
                "smithy.api#private": {},
                "smithy.api#unstable": {}
            }
        },
        "smithy.rules#Properties": {
            "type": "map",
            "key": {
                "target": "smithy.api#String",
                "traits": {
                    "smithy.api#documentation": "The property name."
                }
            },
            "value": {
                "target": "smithy.api#Document",
                "traits": {
                    "smithy.api#documentation": "The property value."
                }
            },
            "traits": {
                "smithy.api#documentation": "A map of strings to document values.",
                "smithy.api#private": {},
                "smithy.api#unstable": {}
            }
        },
        "smithy.rules#ShapeType": {
            "type": "enum",
            "members": {
                "STRING": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "Indicates a Smithy string shape type.",
                        "smithy.api#enumValue": "string"
                    }
                },
                "BOOLEAN": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "Indicates a Smithy boolean shape type.",
                        "smithy.api#enumValue": "boolean"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "An enum representing supported Smithy shape types.",
                "smithy.api#private": {},
                "smithy.api#unstable": {}
            }
        },
        "smithy.rules#StaticContextParamDefinition": {
            "type": "structure",
            "members": {
                "value": {
                    "target": "smithy.api#Document",
                    "traits": {
                        "smithy.api#documentation": "The value to set the associated rule-set parameter to.",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "A static context parameter definition.",
                "smithy.api#private": {},
                "smithy.api#unstable": {}
            }
        },
        "smithy.rules#clientContextParams": {
            "type": "map",
            "key": {
                "target": "smithy.api#String",
                "traits": {
                    "smithy.api#documentation": "The rule-set parameter name."
                }
            },
            "value": {
                "target": "smithy.rules#ClientContextParamDefinition",
                "traits": {
                    "smithy.api#documentation": "The client parameter definition."
                }
            },
            "traits": {
                "smithy.api#documentation": "Defines one or more named rule-set parameters to be generated as configurable client parameters.\nThe type specified for the client parameter MUST match the parameter type defined in the rule-set.",
                "smithy.api#trait": {
                    "selector": "service"
                },
                "smithy.api#unstable": {}
            }
        },
        "smithy.rules#contextParam": {
            "type": "structure",
            "members": {
                "name": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The rule-set parameter name.",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Binds the targeted member of an operation's input structure to the named rule-set parameter.\nThe type of the shape targeted by the trait MUST match the parameter type defined in the rule-set.",
                "smithy.api#trait": {
                    "selector": "operation -[input]-> structure > member"
                },
                "smithy.api#unstable": {}
            }
        },
        "smithy.rules#endpointRuleSet": {
            "type": "document",
            "traits": {
                "smithy.api#documentation": "Defines an endpoint rule-set used to resolve the client's transport endpoint.",
                "smithy.api#trait": {
                    "selector": "service"
                },
                "smithy.api#unstable": {}
            }
        },
        "smithy.rules#endpointTests": {
            "type": "structure",
            "members": {
                "version": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The endpoint tests schema version.",
                        "smithy.api#required": {}
                    }
                },
                "testCases": {
                    "target": "smithy.rules#EndpointTestList",
                    "traits": {
                        "smithy.api#documentation": "List of endpoint test cases."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Defines endpoint test-cases for validating a client's endpoint rule-set.",
                "smithy.api#trait": {
                    "selector": "service"
                },
                "smithy.api#unstable": {}
            }
        },
        "smithy.rules#operationContextParams": {
            "type": "map",
            "key": {
                "target": "smithy.api#String",
                "traits": {
                    "smithy.api#documentation": "The rule-set parameter name."
                }
            },
            "value": {
                "target": "smithy.rules#OperationContextParamDefinition",
                "traits": {
                    "smithy.api#documentation": "The static parameter definition."
                }
            },
            "traits": {
                "smithy.api#documentation": "Binds one or more named rule-set parameters to elements contained in the operation's input structure.\nThe type of the shapes targeted by the trait MUST match the parameter types defined in the rule-set.",
                "smithy.api#trait": {
                    "selector": "operation"
                },
                "smithy.api#unstable": {}
            }
        },
        "smithy.rules#staticContextParams": {
            "type": "map",
            "key": {
                "target": "smithy.api#String",
                "traits": {
                    "smithy.api#documentation": "The rule-set parameter name."
                }
            },
            "value": {
                "target": "smithy.rules#StaticContextParamDefinition",
                "traits": {
                    "smithy.api#documentation": "The static parameter definition."
                }
            },
            "traits": {
                "smithy.api#documentation": "Binds one or more named rule-set parameters to the defined static value for the targeted operation.\nThe type of the targeted shape targeted by the trait MUST match the parameter type defined in the rule-set.",
                "smithy.api#trait": {
                    "selector": "operation"
                },
                "smithy.api#unstable": {}
            }
        },
        "smithy.test#Expectation": {
            "type": "union",
            "members": {
                "success": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "Indicates that the call is expected to not throw an error. No other\nassertions are made about the response."
                    }
                },
                "failure": {
                    "target": "smithy.test#FailureExpectation",
                    "traits": {
                        "smithy.api#documentation": "Indicates that the call is expected to throw an error."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "The different kinds of expectations that can be made for a test case.",
                "smithy.api#private": {}
            }
        },
        "smithy.test#FailureExpectation": {
            "type": "structure",
            "members": {
                "errorId": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Indicates that the call is expected to throw a specific type of error\nmatching the targeted shape. If not specified, the error can be of\nany type.",
                        "smithy.api#idRef": {
                            "failWhenMissing": true,
                            "selector": "[trait|error]"
                        }
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.test#SmokeTestCase": {
            "type": "structure",
            "members": {
                "id": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The identifier of the test case. This identifier may be used by\nsmoke test implementations to generate test case names. The provided\n`id` MUST match Smithy's `IDENTIFIER` ABNF. No two test cases can\nshare the same ID, including test cases defined for other operations\nbound to the same service.",
                        "smithy.api#pattern": "^[A-Za-z_][A-Za-z0-9_]+$",
                        "smithy.api#required": {}
                    }
                },
                "params": {
                    "target": "smithy.api#Document",
                    "traits": {
                        "smithy.api#documentation": "Defines the input parameters used to generate the request. These\nparameters MUST be compatible with the input of the operation.\n\nParameter values that contain binary data MUST be defined using values\nthat can be represented in plain text as the plain text representation\n(for example, use `\"foo\"` and not `\"Zm9vCg==\"`)."
                    }
                },
                "vendorParams": {
                    "target": "smithy.api#Document",
                    "traits": {
                        "smithy.api#documentation": "Defines vendor-specific parameters that are used to influence the\nrequest. For example, some vendors might utilize environment variables,\nconfiguration files on disk, or other means to influence the\nserialization formats used by clients or servers.\n\nIf a `vendorParamsShape` is set, these parameters MUST be compatible with\nthat shape's definition."
                    }
                },
                "vendorParamsShape": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The ID of the shape that should be used to validate the `vendorParams`\nmember contents.\n\nIf set, the parameters in `vendorParams` MUST be compatible with this\nshape's definition.",
                        "smithy.api#idRef": {
                            "failWhenMissing": true
                        }
                    }
                },
                "expect": {
                    "target": "smithy.test#Expectation",
                    "traits": {
                        "smithy.api#documentation": "Defines the kind of response that is expected from the service call.",
                        "smithy.api#required": {}
                    }
                },
                "tags": {
                    "target": "smithy.test#TagList",
                    "traits": {
                        "smithy.api#documentation": "Attaches a list of tags that can be used to categorize and group\ntest cases. If a test case uses a feature that requires special\nconfiguration, it should be tagged."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "A single smoke test case definition.",
                "smithy.api#private": {}
            }
        },
        "smithy.test#Tag": {
            "type": "string",
            "traits": {
                "smithy.api#pattern": "^[A-Za-z][A-Za-z0-9_\\-]+$",
                "smithy.api#private": {}
            }
        },
        "smithy.test#TagList": {
            "type": "list",
            "member": {
                "target": "smithy.test#Tag"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.test#smokeTests": {
            "type": "list",
            "member": {
                "target": "smithy.test#SmokeTestCase",
                "traits": {
                    "smithy.api#documentation": "A list of smoke tests to perform on the operation"
                }
            },
            "traits": {
                "smithy.api#documentation": "Defines a set of test cases to send to a live service to ensure that a\nclient can successfully connect to a service and get the right kind of\nresponse.",
                "smithy.api#trait": {
                    "selector": "operation"
                }
            }
        },
        "smithy.waiters#Acceptor": {
            "type": "structure",
            "members": {
                "state": {
                    "target": "smithy.waiters#AcceptorState",
                    "traits": {
                        "smithy.api#documentation": "The state the acceptor transitions to when matched.",
                        "smithy.api#required": {}
                    }
                },
                "matcher": {
                    "target": "smithy.waiters#Matcher",
                    "traits": {
                        "smithy.api#documentation": "The matcher used to test if the resource is in a given state.",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Represents an acceptor in a waiter's state machine.",
                "smithy.api#private": {}
            }
        },
        "smithy.waiters#AcceptorState": {
            "type": "enum",
            "members": {
                "SUCCESS": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "The waiter successfully finished waiting. This is a terminal\nstate that causes the waiter to stop.",
                        "smithy.api#enumValue": "success"
                    }
                },
                "FAILURE": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "The waiter failed to enter into the desired state. This is a\nterminal state that causes the waiter to stop.",
                        "smithy.api#enumValue": "failure"
                    }
                },
                "RETRY": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "The waiter will retry the operation. This state transition is\nimplicit if no accepter causes a state transition.",
                        "smithy.api#enumValue": "retry"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "The transition state of a waiter.",
                "smithy.api#private": {}
            }
        },
        "smithy.waiters#Acceptors": {
            "type": "list",
            "member": {
                "target": "smithy.waiters#Acceptor"
            },
            "traits": {
                "smithy.api#length": {
                    "min": 1
                },
                "smithy.api#private": {}
            }
        },
        "smithy.waiters#Matcher": {
            "type": "union",
            "members": {
                "output": {
                    "target": "smithy.waiters#PathMatcher",
                    "traits": {
                        "smithy.api#documentation": "Matches on the successful output of an operation using a\nJMESPath expression."
                    }
                },
                "inputOutput": {
                    "target": "smithy.waiters#PathMatcher",
                    "traits": {
                        "smithy.api#documentation": "Matches on both the input and output of an operation using a JMESPath\nexpression. Input parameters are available through the top-level\n`input` field, and output data is available through the top-level\n`output` field. This matcher can only be used on operations that\ndefine both input and output. This matcher is checked only if an\noperation completes successfully."
                    }
                },
                "errorType": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Matches if an operation returns an error and the error matches\nthe expected error type. If an absolute shape ID is provided, the\nerror is matched exactly on the shape ID. A shape name can be\nprovided to match an error in any namespace with the given name."
                    }
                },
                "success": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "When set to `true`, matches when an operation returns a successful\nresponse. When set to `false`, matches when an operation fails with\nany error."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Defines how an acceptor determines if it matches the current state of\na resource.",
                "smithy.api#private": {}
            }
        },
        "smithy.waiters#NonEmptyString": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1
                },
                "smithy.api#private": {}
            }
        },
        "smithy.waiters#NonEmptyStringList": {
            "type": "list",
            "member": {
                "target": "smithy.waiters#NonEmptyString"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.waiters#PathComparator": {
            "type": "enum",
            "members": {
                "STRING_EQUALS": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "Matches if the return value is a string that is equal to the expected string.",
                        "smithy.api#enumValue": "stringEquals"
                    }
                },
                "BOOLEAN_EQUALS": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "Matches if the return value is a boolean that is equal to the string literal 'true' or 'false'.",
                        "smithy.api#enumValue": "booleanEquals"
                    }
                },
                "ALL_STRING_EQUALS": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "Matches if all values in the list matches the expected string.",
                        "smithy.api#enumValue": "allStringEquals"
                    }
                },
                "ANY_STRING_EQUALS": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "Matches if any value in the list matches the expected string.",
                        "smithy.api#enumValue": "anyStringEquals"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Defines a comparison to perform in a PathMatcher.",
                "smithy.api#private": {}
            }
        },
        "smithy.waiters#PathMatcher": {
            "type": "structure",
            "members": {
                "path": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A JMESPath expression applied to the input or output of an operation.",
                        "smithy.api#required": {}
                    }
                },
                "expected": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The expected return value of the expression.",
                        "smithy.api#required": {}
                    }
                },
                "comparator": {
                    "target": "smithy.waiters#PathComparator",
                    "traits": {
                        "smithy.api#documentation": "The comparator used to compare the result of the expression with the\nexpected value.",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Defines how to test the result of a JMESPath expression against\nan expected value.",
                "smithy.api#private": {}
            }
        },
        "smithy.waiters#Waiter": {
            "type": "structure",
            "members": {
                "documentation": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Documentation about the waiter. Can use CommonMark."
                    }
                },
                "acceptors": {
                    "target": "smithy.waiters#Acceptors",
                    "traits": {
                        "smithy.api#documentation": "An ordered array of acceptors to check after executing an operation.",
                        "smithy.api#required": {}
                    }
                },
                "minDelay": {
                    "target": "smithy.waiters#WaiterDelay",
                    "traits": {
                        "smithy.api#default": 2,
                        "smithy.api#documentation": "The minimum amount of time in seconds to delay between each retry.\nThis value defaults to 2 if not specified. If specified, this value\nMUST be greater than or equal to 1 and less than or equal to\n`maxDelay`."
                    }
                },
                "maxDelay": {
                    "target": "smithy.waiters#WaiterDelay",
                    "traits": {
                        "smithy.api#default": 120,
                        "smithy.api#documentation": "The maximum amount of time in seconds to delay between each retry.\nThis value defaults to 120 if not specified (or, 2 minutes). If\nspecified, this value MUST be greater than or equal to 1."
                    }
                },
                "deprecated": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "Indicates if the waiter is considered deprecated. A waiter SHOULD\nbe marked as deprecated if it has been replaced by another waiter or\nif it is no longer needed (for example, if a resource changes from\neventually consistent to strongly consistent)."
                    }
                },
                "tags": {
                    "target": "smithy.waiters#NonEmptyStringList",
                    "traits": {
                        "smithy.api#documentation": "A list of tags associated with the waiter that allow waiters to be\ncategorized and grouped."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Defines an individual operation waiter.",
                "smithy.api#private": {}
            }
        },
        "smithy.waiters#WaiterDelay": {
            "type": "integer",
            "traits": {
                "smithy.api#range": {
                    "min": 1
                }
            }
        },
        "smithy.waiters#WaiterName": {
            "type": "string",
            "traits": {
                "smithy.api#pattern": "^[A-Z]+[A-Za-z0-9]*$"
            }
        },
        "smithy.waiters#waitable": {
            "type": "map",
            "key": {
                "target": "smithy.waiters#WaiterName"
            },
            "value": {
                "target": "smithy.waiters#Waiter"
            },
            "traits": {
                "smithy.api#documentation": "Indicates that an operation has various named \"waiters\" that can be used\nto poll a resource until it enters a desired state.",
                "smithy.api#length": {
                    "min": 1
                },
                "smithy.api#trait": {
                    "selector": "operation :not(-[input, output]-> structure > member > union[trait|streaming])"
                }
            }
        }
    }
}
